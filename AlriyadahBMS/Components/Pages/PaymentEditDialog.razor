@using AlriyadahBMS.Services
@using AlriyadahBMS.Shared.ViewModels

@inject TableService tableService
@inject LocalizationService Language
@inject ISnackbar Snackbar

<MudDialog Class="overflow-y-scroll">

    <DialogContent>
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="@Language.Phrase("tblbillinginfo", "tblpagecaption1")">

                <MudPaper Class="pa-2 ma-2" Elevation="0">

                     <MudTextField Label="@Language.Phrase("tblbillinginfo","nationalid","fldcaption")" Variant="Variant.Outlined" @bind-Value="@paymentsEditData.NationalID" Disabled />
                     <MudTextField Label="@Language.Phrase("tblstudents","str_first_name","fldcaption")" @bind-Value="@paymentsEditData.str_First_Name" Variant="Variant.Outlined" Disabled />
                     <MudTextField Label="@Language.Phrase("tblstudents","str_last_name","fldcaption")" @bind-Value="@paymentsEditData.str_Last_Name" Variant="Variant.Outlined" Disabled />
                     <MudTextField Label="@Language.Phrase("tblbillinginfo","str_approvalcode","fldcaption")" @bind-Value="@paymentsEditData.str_ApprovalCode" Variant="Variant.Outlined" />

                     <MudCheckBox Label="@Language.Phrase("tblbillinginfo","bit_isrefund","fldcaption")" @bind-Value="@paymentsEditData.bit_IsRefund" Size="Size.Small" Color="Color.Primary"></MudCheckBox>
                     <MudTextField Label="@Language.Phrase("tblbillinginfo","package_name","fldcaption")" @bind-Value="@paymentsEditData.Package_Name" Variant="Variant.Outlined" DisableUnderLine />
                     <MudTextField Label="@Language.Phrase("tblbillinginfo","price","fldcaption")" @bind-Value="@paymentsEditData.Price" Variant="Variant.Outlined" DisableUnderLine />
                   
                    @* <MudButton Class="mt-3" Variant="Variant.Filled" Color="Color.Default">Close</MudButton> *@
                </MudPaper>

            </MudTabPanel>
             <MudTabPanel Text="@Language.Phrase("tblbillinginfo", "tblpagecaption2")">

                 <MudSelect Label="@Language.Phrase("tblbillinginfo", "int_payment_method", "fldcaption")" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" @bind-Value="paymentsEditData.int_Payment_Method">
                     @{
                        foreach (PaymentMethod type in Enum.GetValues(typeof(PaymentMethod)))
                        {
                            int? value = (int)type;
                            <MudSelectItem T="int?" value="@value">@type.ToDescriptionString()</MudSelectItem>
                        }
                    }
                </MudSelect>

                <MudDatePicker Label="Editable with Placeholder" Editable="true" @bind-Date="paymentsEditData.date_Paid" Placeholder="Select Date" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","str_cc_holder_name","fldcaption")" @bind-Value="@paymentsEditData.str_CC_Holder_Name" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","str_cc_number","fldcaption")" @bind-Value="@paymentsEditData.str_CC_Number" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","int_cc_expmonth","fldcaption")" @bind-Value="@paymentsEditData.int_CC_ExpMonth" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","int_cc_expyear","fldcaption")" @bind-Value="@paymentsEditData.int_CC_ExpYear" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","int_cc_type","fldcaption")" @bind-Value="@paymentsEditData.int_CC_Type" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","str_card_id","fldcaption")" @bind-Value="@paymentsEditData.str_Card_Id" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","str_cc_validationnum","fldcaption")" @bind-Value="@paymentsEditData.str_CC_ValidationNum" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","str_amount_pay","fldcaption")" @bind-Value="@paymentsEditData.str_Amount_Pay" Variant="Variant.Outlined" />
                <MudTextField Label="@Language.Phrase("tblbillinginfo","mny_running_payments","fldcaption")" @bind-Value="@paymentsEditData.mny_Running_Balance" Variant="Variant.Outlined" />
                <MudTextField T="string" Label="@Language.Phrase("tblbillinginfo","str_payment_note_updated","fldcaption")" Lines="3" Variant="Variant.Outlined" @bind-Value="paymentsEditData.str_Payment_Note" />


            </MudTabPanel>
        </MudTabs>
    </DialogContent>
    <DialogActions>
        <MudButton Class="mt-3 mb-2" Variant="Variant.Filled" OnClick="Cancel" Color="Color.Default">@Language.Phrase("cancelbtn")</MudButton>
            <MudButton Class="mt-3 mb-2" Variant="Variant.Filled" Color="Color.Primary" OnClick="OnClick_UpdatePayment">@Language.Phrase("savebtn")</MudButton>

    </DialogActions>

</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public PaymentsModel? paymentsEditData { get; set; }
    void Cancel() => MudDialog.Cancel();

    public async void OnClick_UpdatePayment()
    {
        var check = await tableService.UpdateRecord<PaymentsModel, PaymentsModel>(TableConst.TblPayments, paymentsEditData!.int_Bill_ID, paymentsEditData);
        if (check.Success)
        {
            Snackbar.Add("Payment has been updated", Severity.Success);
        }
        else
        {
            Snackbar.Add("Some error occured", Severity.Error);
        }
        ClosePopup(); 
    }

    // public async void OnClick_UpdateStudentRegistration()
    // {
    //     var check = await tableService.UpdateRecord<StudentRegistrationModel, StudentRegistrationModel>(TableConst.TblStudents, StudentEditData!.int_Student_ID.GetValueOrDefault(), StudentEditData);

    // }

    private void ClosePopup()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

}
