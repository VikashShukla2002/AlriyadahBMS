@inject FileUploadService FileUpload

@inject LocalizationService Language

@using AlriyadahBMS.Services
@using AlriyadahBMS.Shared.ViewModels
<MudPaper Elevation="3" class="pa-4">
    <MudCheckBox @bind-Value="@Model.IsDrivingexperience" Label="@Language.Phrase("tblstudents","isdrivingexperience","fldcaption")" Color="Color.Primary"></MudCheckBox>

    <MudSelect T="int" Label="@Language.Phrase("tblstudents","intdrivinglicensetype","fldcaption")" AnchorOrigin="Origin.BottomCenter" @bind-Value="Model.intDrivinglicenseType">
        @*    <MudSelectItem Value="@("Private Vehicle")" />
        <MudSelectItem Value="@("Motorbike")" />
        <MudSelectItem Value="@("Taxi")" />
        <MudSelectItem Value="@("CDL (Trucks & Buses)")" /> *@

        <MudSelectItem Value="1">@Language.Phrase("tblstudents", "intdrivinglicensetype", "fldtagcaption1")</MudSelectItem>
            <MudSelectItem Value="2">@Language.Phrase("tblstudents", "intdrivinglicensetype", "fldtagcaption2")</MudSelectItem>
            <MudSelectItem Value="3">@Language.Phrase("tblstudents", "intdrivinglicensetype", "fldtagcaption3")</MudSelectItem>
            <MudSelectItem Value="4">@Language.Phrase("tblstudents", "intdrivinglicensetype", "fldtagcaption4")</MudSelectItem>

    </MudSelect>
        <MudTextField Label="@Language.Phrase("tblpotentialstudentinfo", "absher_appointment_number", "fldcaption")" @bind-Value="Model.AbsherApptNbr" Required="true" RequiredError="@Language.Phrase("abshrenumberRequired")" />


    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFile">
        <ButtonTemplate>
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       for="@context.Id">
                    @Language.Phrase("tblstudents","absherphoto","fldcaption")
            </MudButton>
        </ButtonTemplate>
        <SelectedTemplate>
            @if (context != null)
            {
                <MudText>@context.Name</MudText>
            }
            else
            {
                <MudText>@Language.Phrase("noFileUploaded")</MudText>
            }
        </SelectedTemplate>
    </MudFileUpload>
    @if (!string.IsNullOrEmpty(ImageSrc))
    {
        <MudImage Src="@ImageSrc" Width="200" Height="150" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
    }

</MudPaper>

@code {


    [Parameter]
    public RegisterModels Model { get; set; } = null!;

    [Parameter]
    public EventCallback<byte[]> FileChanged { get; set; }

    string Message = "No file(s) selected";
    private string? ImageSrc { get; set; }




    protected override Task OnInitializedAsync()
    {
        // Model.Absherphoto = "file_example_PNG_500kB.png";
        return base.OnInitializedAsync();
    }


    private async Task UploadFile(IBrowserFile file)
    {
        using (var memoryStream = new MemoryStream())
        {
            await file.OpenReadStream(file.Size).CopyToAsync(memoryStream);

            var buffer = memoryStream.ToArray();

            var base64String = Convert.ToBase64String(buffer);

            ImageSrc = $"data:{file.ContentType};base64," + base64String;

            await FileChanged.InvokeAsync(buffer);

            Model.Absherphoto = file.Name;
            // var fileUploadResponse = FileUpload.UploadFiles(file);
        }

    }
}