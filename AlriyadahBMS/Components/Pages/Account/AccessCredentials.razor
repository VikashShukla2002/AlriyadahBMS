@using AlriyadahBMS.Shared.ViewModels



<MudPaper Elevation="3" Class="pa-4">
    <MudTextField T="string" @bind-Value="registerModels.str_Password" Required="true" RequiredError="Password is required!" @ref="passwordMatch" Label=" Password" Variant="Variant.Text" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonPasswordclick" AdornmentAriaLabel="Show Password" />
   
    @* <MudTextField T="string" @bind-Value="registerModels.p" Required="true" RequiredError="Retype password is required!" Validation="@(new Func<string, string>(PasswordMatch))" Label="Retype Password" Variant="Variant.Text" InputType="@RetypePasswordInput" Adornment="Adornment.End" AdornmentIcon="@RetypePasswordInputIcon" OnAdornmentClick="ButtonReTypePasswordclick" AdornmentAriaLabel="Retype Password" /> *@

    <MudTextField T="string" @bind-Value="registerModels.str_NationalID_Iqama" Label="National ID Iqama" Required="true" RequiredError="National Id Iqama is required" Variant="Variant.Text" />

</MudPaper>

@code{
    private RegisterModels registerModels { get; set; } = new();
    MudTextField<string>? passwordMatch;

    InputType PasswordInput = InputType.Password;
    InputType RetypePasswordInput = InputType.Password;
    string RetypePasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    bool isShowPassword;
    bool isShowRetyPassword;

    private string PasswordMatch(string arg)
    {
        if (passwordMatch.Value != arg)
            return "Passwords don't match";
        return null;
    }

    void ButtonPasswordclick()
    {
        if (isShowPassword)
        {
            isShowPassword = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShowPassword = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void ButtonReTypePasswordclick()
    {
        if (isShowRetyPassword)
        {
            isShowRetyPassword = false;
            RetypePasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            RetypePasswordInput = InputType.Password;
        }
        else
        {
            isShowRetyPassword = true;
            RetypePasswordInputIcon = Icons.Material.Filled.Visibility;
            RetypePasswordInput = InputType.Text;
        }
    }

}