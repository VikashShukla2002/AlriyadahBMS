@{
    // View
    View = this;

    // Check action result
    if (tblStudentEnrollmentEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!tblStudentEnrollmentEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@tblStudentEnrollmentEdit.ShowPageHeader()
@tblStudentEnrollmentEdit.ShowMessages()
<main class="edit">
<form name="ftblStudentEnrollmentedit" id="ftblStudentEnrollmentedit" class="@(tblStudentEnrollmentEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
<script>
var currentTable = @Html.Raw(ConvertToJson(tblStudentEnrollmentEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tblStudentEnrollment: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var ftblStudentEnrollmentedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("ftblStudentEnrollmentedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["str_Full_Name", [fields.str_Full_Name.visible && fields.str_Full_Name.required ? ew.Validators.required(fields.str_Full_Name.caption) : null], fields.str_Full_Name.isInvalid],
            ["str_Username", [fields.str_Username.visible && fields.str_Username.required ? ew.Validators.required(fields.str_Username.caption) : null], fields.str_Username.isInvalid],
            ["NationalID", [fields.NationalID.visible && fields.NationalID.required ? ew.Validators.required(fields.NationalID.caption) : null], fields.NationalID.isInvalid],
            ["int_CR_ID", [fields.int_CR_ID.visible && fields.int_CR_ID.required ? ew.Validators.required(fields.int_CR_ID.caption) : null], fields.int_CR_ID.isInvalid],
            ["str_Package_Name", [fields.str_Package_Name.visible && fields.str_Package_Name.required ? ew.Validators.required(fields.str_Package_Name.caption) : null], fields.str_Package_Name.isInvalid],
            ["str_Amount_Pay", [fields.str_Amount_Pay.visible && fields.str_Amount_Pay.required ? ew.Validators.required(fields.str_Amount_Pay.caption) : null], fields.str_Amount_Pay.isInvalid],
            ["UniqueIdx", [fields.UniqueIdx.visible && fields.UniqueIdx.required ? ew.Validators.required(fields.UniqueIdx.caption) : null], fields.UniqueIdx.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "int_CR_ID": @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.ToClientList(tblStudentEnrollmentEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (tblStudentEnrollmentEdit.IsConfirm) { // Confirm page
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="confirm" id="confirm" value="confirm">
} else {
<input type="hidden" name="action" id="action" value="confirm">
}
<input type="hidden" name="modal" value="@ConvertToInt(tblStudentEnrollmentEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(tblStudentEnrollmentEdit.OldKeyName)" value="@Html.Raw(tblStudentEnrollmentEdit.OldKey)">
@if (tblStudentEnrollmentEdit.CurrentMasterTable == "tblBillingInfo") {
<input type="hidden" name="@Config.TableShowMaster" value="tblBillingInfo">
<input type="hidden" name="fk_NationalID" value="@(HtmlEncode(tblStudentEnrollmentEdit.NationalID.SessionValue))">
}
<div class="ew-edit-div"><!-- page* -->
@if (tblStudentEnrollmentEdit.str_Full_Name.Visible) { // tblStudentEnrollmentEdit.str_Full_Name.Visible (begin)
    <div id="r_str_Full_Name" @Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.RowAttributes)>
        <label id="elh_tblStudentEnrollment_str_Full_Name" for="x_str_Full_Name" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.Caption)@Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // str_Full_Name (begin)
<span id="el_tblStudentEnrollment_str_Full_Name">
<span @Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.DisplayValue(tblStudentEnrollmentEdit.str_Full_Name.EditValue))</span></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Full_Name" data-hidden="1" name="x_str_Full_Name" id="x_str_Full_Name" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Full_Name.CurrentValue))">
</span>
} else { // str_Full_Name (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblStudentEnrollmentEdit.str_Full_Name.DisplayValue(tblStudentEnrollmentEdit.str_Full_Name.ViewValue))</span></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Full_Name" data-hidden="1" name="x_str_Full_Name" id="x_str_Full_Name" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Full_Name.FormValue))">
} @* str_Full_Name (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.str_Full_Name.Visible (end) *@
@if (tblStudentEnrollmentEdit.NationalID.Visible) { // tblStudentEnrollmentEdit.NationalID.Visible (begin)
    <div id="r_NationalID" @Html.Raw(tblStudentEnrollmentEdit.NationalID.RowAttributes)>
        <label id="elh_tblStudentEnrollment_NationalID" for="x_NationalID" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.NationalID.Caption)@Html.Raw(tblStudentEnrollmentEdit.NationalID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.NationalID.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // NationalID (begin)
<span id="el_tblStudentEnrollment_NationalID">
<span @Html.Raw(tblStudentEnrollmentEdit.NationalID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblStudentEnrollmentEdit.NationalID.DisplayValue(tblStudentEnrollmentEdit.NationalID.EditValue))</span></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_NationalID" data-hidden="1" name="x_NationalID" id="x_NationalID" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.NationalID.CurrentValue))">
</span>
} else { // NationalID (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.NationalID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblStudentEnrollmentEdit.NationalID.DisplayValue(tblStudentEnrollmentEdit.NationalID.ViewValue))</span></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_NationalID" data-hidden="1" name="x_NationalID" id="x_NationalID" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.NationalID.FormValue))">
} @* NationalID (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.NationalID.Visible (end) *@
@if (tblStudentEnrollmentEdit.int_CR_ID.Visible) { // tblStudentEnrollmentEdit.int_CR_ID.Visible (begin)
    <div id="r_int_CR_ID" @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.RowAttributes)>
        <label id="elh_tblStudentEnrollment_int_CR_ID" for="x_int_CR_ID" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.Caption)@Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // int_CR_ID (begin)
<span id="el_tblStudentEnrollment_int_CR_ID">
    <select
        id="x_int_CR_ID"
        name="x_int_CR_ID"
        class="form-select ew-select@(tblStudentEnrollmentEdit.int_CR_ID.IsInvalidClass)"
        data-select2-id="ftblStudentEnrollmentedit_x_int_CR_ID"
        data-table="tblStudentEnrollment"
        data-field="x_int_CR_ID"
        data-value-separator="@(tblStudentEnrollmentEdit.int_CR_ID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblStudentEnrollmentEdit.int_CR_ID.PlaceHolder))"
        @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.EditAttributes)>
        @(tblStudentEnrollmentEdit.int_CR_ID.SelectOptionListHtml("x_int_CR_ID"))
    </select>
    @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.GetErrorMessage())</div>
@Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.Lookup.GetParamTag(tblStudentEnrollmentEdit, "p_x_int_CR_ID"))
<script>
loadjs.ready("ftblStudentEnrollmentedit", function() {
    var options = { name: "x_int_CR_ID", selectId: "ftblStudentEnrollmentedit_x_int_CR_ID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblStudentEnrollmentedit.lists.int_CR_ID?.lookupOptions.length) {
        options.data = { id: "x_int_CR_ID", form: "ftblStudentEnrollmentedit" };
    } else {
        options.ajax = { id: "x_int_CR_ID", form: "ftblStudentEnrollmentedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblStudentEnrollment.fields.int_CR_ID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_CR_ID (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblStudentEnrollmentEdit.int_CR_ID.DisplayValue(tblStudentEnrollmentEdit.int_CR_ID.ViewValue))</span></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_int_CR_ID" data-hidden="1" name="x_int_CR_ID" id="x_int_CR_ID" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.int_CR_ID.FormValue))">
} @* int_CR_ID (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.int_CR_ID.Visible (end) *@
@if (tblStudentEnrollmentEdit.str_Package_Name.Visible) { // tblStudentEnrollmentEdit.str_Package_Name.Visible (begin)
    <div id="r_str_Package_Name" @Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.RowAttributes)>
        <label id="elh_tblStudentEnrollment_str_Package_Name" for="x_str_Package_Name" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.Caption)@Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // str_Package_Name (begin)
<span id="el_tblStudentEnrollment_str_Package_Name">
<span @Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblStudentEnrollmentEdit.str_Package_Name.EditValue)))"></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Package_Name" data-hidden="1" name="x_str_Package_Name" id="x_str_Package_Name" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Package_Name.CurrentValue))">
</span>
} else { // str_Package_Name (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.str_Package_Name.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblStudentEnrollmentEdit.str_Package_Name.ViewValue)))"></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Package_Name" data-hidden="1" name="x_str_Package_Name" id="x_str_Package_Name" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Package_Name.FormValue))">
} @* str_Package_Name (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.str_Package_Name.Visible (end) *@
@if (tblStudentEnrollmentEdit.str_Amount_Pay.Visible) { // tblStudentEnrollmentEdit.str_Amount_Pay.Visible (begin)
    <div id="r_str_Amount_Pay" @Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.RowAttributes)>
        <label id="elh_tblStudentEnrollment_str_Amount_Pay" for="x_str_Amount_Pay" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.Caption)@Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // str_Amount_Pay (begin)
<span id="el_tblStudentEnrollment_str_Amount_Pay">
<span @Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblStudentEnrollmentEdit.str_Amount_Pay.EditValue)))"></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Amount_Pay" data-hidden="1" name="x_str_Amount_Pay" id="x_str_Amount_Pay" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Amount_Pay.CurrentValue))">
</span>
} else { // str_Amount_Pay (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.str_Amount_Pay.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblStudentEnrollmentEdit.str_Amount_Pay.ViewValue)))"></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Amount_Pay" data-hidden="1" name="x_str_Amount_Pay" id="x_str_Amount_Pay" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Amount_Pay.FormValue))">
} @* str_Amount_Pay (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.str_Amount_Pay.Visible (end) *@
@if (tblStudentEnrollmentEdit.UniqueIdx.Visible) { // tblStudentEnrollmentEdit.UniqueIdx.Visible (begin)
    <div id="r_UniqueIdx" @Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.RowAttributes)>
        <label id="elh_tblStudentEnrollment_UniqueIdx" for="x_UniqueIdx" class="@(tblStudentEnrollmentEdit.LeftColumnClass)">@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.Caption)@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblStudentEnrollmentEdit.RightColumnClass)"><div @Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.CellAttributes)>
@if (!tblStudentEnrollmentEdit.IsConfirm) { // UniqueIdx (begin)
<span id="el_tblStudentEnrollment_UniqueIdx">
<input type="@(tblStudentEnrollmentEdit.UniqueIdx.InputTextType)" name="x_UniqueIdx" id="x_UniqueIdx" data-table="tblStudentEnrollment" data-field="x_UniqueIdx" value="@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.EditValue)" size="30" maxlength="261" placeholder="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.UniqueIdx.PlaceHolder))" data-format-pattern="@(tblStudentEnrollmentEdit.UniqueIdx.FormatPattern)"@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.EditAttributes) aria-describedby="x_UniqueIdx_help">
@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.GetErrorMessage())</div>
</span>
} else { // UniqueIdx (confirm)
<span @Html.Raw(tblStudentEnrollmentEdit.UniqueIdx.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblStudentEnrollmentEdit.UniqueIdx.ViewValue)))"></span>
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_UniqueIdx" data-hidden="1" name="x_UniqueIdx" id="x_UniqueIdx" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.UniqueIdx.FormValue))">
} @* UniqueIdx (end) *@
</div></div>
    </div>
} @* tblStudentEnrollmentEdit.UniqueIdx.Visible (end) *@
</div><!-- /page* -->
@if (!tblStudentEnrollmentEdit.IsConfirm) { // str_Username (begin)
} else { // str_Username (confirm)
<input type="hidden" data-table="tblStudentEnrollment" data-field="x_str_Username" data-hidden="1" name="x_str_Username" id="x_str_Username" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.str_Username.FormValue))">
} @* str_Username (end) *@
    <input type="hidden" data-table="tblStudentEnrollment" data-field="x_int_Enrollement_Id" data-hidden="1" name="x_int_Enrollement_Id" id="x_int_Enrollement_Id" value="@Html.Raw(HtmlEncode(tblStudentEnrollmentEdit.int_Enrollement_Id.CurrentValue))">
@{ tblStudentEnrollmentEdit.CloseRecordset(); }
@Html.Raw(tblStudentEnrollmentEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(tblStudentEnrollmentEdit.OffsetColumnClass)"><!-- buttons offset -->
@if (!tblStudentEnrollmentEdit.IsConfirm) { // Confirm page
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftblStudentEnrollmentedit" data-ew-action="set-action" data-value="confirm">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="ftblStudentEnrollmentedit" data-href="@AppPath(tblStudentEnrollmentEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
} else {
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftblStudentEnrollmentedit">@Html.Raw(Language.Phrase("ConfirmBtn"))</button>
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="submit" form="ftblStudentEnrollmentedit" data-ew-action="set-action" data-value="cancel">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(tblStudentEnrollmentEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
</main>
@tblStudentEnrollmentEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("tblStudentEnrollment");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
