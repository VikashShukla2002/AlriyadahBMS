@if (!citiesList.IsExport()) {
<div>
@if (!citiesList.IsGridAdd && !(citiesList.IsGridEdit && citiesList.ModalGridEdit) && !citiesList.IsMultiEdit) {
@Html.Raw(citiesList.Pager.Render())
}
<div class="ew-list-other-options">
@citiesList.OtherOptions.RenderBody()
</div>
</div>
}
@if (citiesList.ModalGridAdd && citiesList.IsGridAdd || citiesList.ModalGridEdit && citiesList.IsGridEdit || citiesList.ModalMultiEdit && citiesList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(citiesList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Cities: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(citiesList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(citiesList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(citiesList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(citiesList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<form name="@(citiesList.FormName)" id="@(citiesList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(citiesList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (citiesList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div class="@(citiesList.GetMultiColumnRowClass())">
@if (citiesList.TotalRecords > 0 || citiesList.IsGridEdit || citiesList.IsMultiEdit) {
    await citiesList.SetupGrid();
    bool eof = citiesList.Recordset == null; // DN
while (citiesList.RecordCount < citiesList.StopRecord || SameString(citiesList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(citiesList.RowIndex, "$rowindex$") &&
        (!citiesList.IsGridAdd || citiesList.CurrentMode == "copy") &&
        (!((citiesList.IsCopy || citiesList.IsAdd) && citiesList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await citiesList.Recordset.ReadAsync();
    citiesList.RecordCount++;
    if (citiesList.RecordCount >= citiesList.StartRecord) {
        await citiesList.SetupRow();
<div class="@(citiesList.GetMultiColumnColClass())" @Html.Raw(citiesList.RowAttributes)>
<div class="@(citiesList.MultiColumnCardClass)">
    @if (citiesList.MultiColumnListOptionsPosition.StartsWith("top", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-header">
        <div class="ew-multi-column-list-option ew-@(citiesList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    citiesList.ListOptions.Tag = "div";
    citiesList.ListOptions.RenderBody(citiesList.MultiColumnListOptionsPosition, citiesList.RowCount);
}
        </div><!-- /.ew-multi-column-list-option -->
    </div>
    }
    <div class="card-body">
    @if (citiesList.City.Visible) { // citiesList.City.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_City">
            <div class="col col-sm-4 Cities_City">@Html.Raw(citiesList.RenderFieldHeader(citiesList.City))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.City.CellAttributes)>
<span @Html.Raw(citiesList.City.ViewAttributes)>
@Html.Raw(citiesList.City.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_City">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.City.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.City.CellAttributes)>
<span @Html.Raw(citiesList.City.ViewAttributes)>
@Html.Raw(citiesList.City.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Arabic_City_Name.Visible) { // citiesList.Arabic_City_Name.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Arabic_City_Name">
            <div class="col col-sm-4 Cities_Arabic_City_Name">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Arabic_City_Name))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Arabic_City_Name.CellAttributes)>
<span @Html.Raw(citiesList.Arabic_City_Name.ViewAttributes)>
@Html.Raw(citiesList.Arabic_City_Name.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Arabic_City_Name">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Arabic_City_Name.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Arabic_City_Name.CellAttributes)>
<span @Html.Raw(citiesList.Arabic_City_Name.ViewAttributes)>
@Html.Raw(citiesList.Arabic_City_Name.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Province_ID.Visible) { // citiesList.Province_ID.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Province_ID">
            <div class="col col-sm-4 Cities_Province_ID">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Province_ID))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Province_ID.CellAttributes)>
<span @Html.Raw(citiesList.Province_ID.ViewAttributes)>
@Html.Raw(citiesList.Province_ID.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Province_ID">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Province_ID.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Province_ID.CellAttributes)>
<span @Html.Raw(citiesList.Province_ID.ViewAttributes)>
@Html.Raw(citiesList.Province_ID.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Province.Visible) { // citiesList.Province.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Province">
            <div class="col col-sm-4 Cities_Province">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Province))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Province.CellAttributes)>
<span @Html.Raw(citiesList.Province.ViewAttributes)>
@Html.Raw(citiesList.Province.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Province">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Province.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Province.CellAttributes)>
<span @Html.Raw(citiesList.Province.ViewAttributes)>
@Html.Raw(citiesList.Province.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Arabic_Province_Name.Visible) { // citiesList.Arabic_Province_Name.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Arabic_Province_Name">
            <div class="col col-sm-4 Cities_Arabic_Province_Name">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Arabic_Province_Name))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Arabic_Province_Name.CellAttributes)>
<span @Html.Raw(citiesList.Arabic_Province_Name.ViewAttributes)>
@Html.Raw(citiesList.Arabic_Province_Name.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Arabic_Province_Name">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Arabic_Province_Name.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Arabic_Province_Name.CellAttributes)>
<span @Html.Raw(citiesList.Arabic_Province_Name.ViewAttributes)>
@Html.Raw(citiesList.Arabic_Province_Name.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Initials.Visible) { // citiesList.Initials.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Initials">
            <div class="col col-sm-4 Cities_Initials">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Initials))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Initials.CellAttributes)>
<span @Html.Raw(citiesList.Initials.ViewAttributes)>
@Html.Raw(citiesList.Initials.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Initials">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Initials.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Initials.CellAttributes)>
<span @Html.Raw(citiesList.Initials.ViewAttributes)>
@Html.Raw(citiesList.Initials.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Population.Visible) { // citiesList.Population.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Population">
            <div class="col col-sm-4 Cities_Population">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Population))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Population.CellAttributes)>
<span @Html.Raw(citiesList.Population.ViewAttributes)>
@Html.Raw(citiesList.Population.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Population">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Population.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Population.CellAttributes)>
<span @Html.Raw(citiesList.Population.ViewAttributes)>
@Html.Raw(citiesList.Population.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Population_2004.Visible) { // citiesList.Population_2004.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Population_2004">
            <div class="col col-sm-4 Cities_Population_2004">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Population_2004))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Population_2004.CellAttributes)>
<span @Html.Raw(citiesList.Population_2004.ViewAttributes)>
@Html.Raw(citiesList.Population_2004.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Population_2004">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Population_2004.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Population_2004.CellAttributes)>
<span @Html.Raw(citiesList.Population_2004.ViewAttributes)>
@Html.Raw(citiesList.Population_2004.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Population_2010.Visible) { // citiesList.Population_2010.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Population_2010">
            <div class="col col-sm-4 Cities_Population_2010">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Population_2010))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Population_2010.CellAttributes)>
<span @Html.Raw(citiesList.Population_2010.ViewAttributes)>
@Html.Raw(citiesList.Population_2010.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Population_2010">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Population_2010.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Population_2010.CellAttributes)>
<span @Html.Raw(citiesList.Population_2010.ViewAttributes)>
@Html.Raw(citiesList.Population_2010.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (citiesList.Population_2022.Visible) { // citiesList.Population_2022.Visible (begin)
        if (citiesList.RowType == RowType.View) { // View record
        <div class="row Cities_Population_2022">
            <div class="col col-sm-4 Cities_Population_2022">@Html.Raw(citiesList.RenderFieldHeader(citiesList.Population_2022))</div>
            <div class="col col-sm-8"><div @Html.Raw(citiesList.Population_2022.CellAttributes)>
<span @Html.Raw(citiesList.Population_2022.ViewAttributes)>
@Html.Raw(citiesList.Population_2022.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row Cities_Population_2022">
            <label class="@(citiesList.LeftColumnClass)">@Html.Raw(citiesList.Population_2022.Caption)</label>
            <div class="@(citiesList.RightColumnClass)"><div @Html.Raw(citiesList.Population_2022.CellAttributes)>
<span @Html.Raw(citiesList.Population_2022.ViewAttributes)>
@Html.Raw(citiesList.Population_2022.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    </div><!-- /.card-body -->
@if (!citiesList.IsExport()) {
    if (citiesList.MultiColumnListOptionsPosition.StartsWith("bottom", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-footer">
        <div class="ew-multi-column-list-option ew-@(citiesList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    citiesList.ListOptions.Tag = "div";
}
@citiesList.ListOptions.RenderBody(citiesList.MultiColumnListOptionsPosition, citiesList.RowCount)
        </div><!-- /.ew-multi-column-list-option -->
    </div><!-- /.card-footer -->
    }
}
</div><!-- /.card -->
</div><!-- /.col-* -->
    } @* End if *@

    // Reset for template row
    if (SameString(citiesList.RowIndex, "$rowindex$"))
        citiesList.RowIndex = 0;

    // Reset inline add/copy row
    if ((citiesList.IsCopy || citiesList.IsAdd) && citiesList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        citiesList.RowIndex = 1;
} @* End While *@
} @* citiesList.TotalRecords > 0 (end) *@
</div><!-- /.ew-multi-column-row -->
@if (Empty(citiesList.CurrentAction) && !citiesList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ citiesList.CloseRecordset(); }
