@{
    // View
    View = this;

    // Check action result
    if (tblClassRoomEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!tblClassRoomEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@tblClassRoomEdit.ShowPageHeader()
@tblClassRoomEdit.ShowMessages()
<main class="edit">
<form name="ftblClassRoomedit" id="ftblClassRoomedit" class="@(tblClassRoomEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
<script>
var currentTable = @Html.Raw(ConvertToJson(tblClassRoomEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tblClassRoom: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var ftblClassRoomedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("ftblClassRoomedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["str_CR_Number", [fields.str_CR_Number.visible && fields.str_CR_Number.required ? ew.Validators.required(fields.str_CR_Number.caption) : null], fields.str_CR_Number.isInvalid],
            ["int_CR_Product_ID", [fields.int_CR_Product_ID.visible && fields.int_CR_Product_ID.required ? ew.Validators.required(fields.int_CR_Product_ID.caption) : null], fields.int_CR_Product_ID.isInvalid],
            ["str_Package_Name", [fields.str_Package_Name.visible && fields.str_Package_Name.required ? ew.Validators.required(fields.str_Package_Name.caption) : null], fields.str_Package_Name.isInvalid],
            ["date_Start", [fields.date_Start.visible && fields.date_Start.required ? ew.Validators.required(fields.date_Start.caption) : null, ew.Validators.datetime(fields.date_Start.clientFormatPattern)], fields.date_Start.isInvalid],
            ["mon_CR_Price", [fields.mon_CR_Price.visible && fields.mon_CR_Price.required ? ew.Validators.required(fields.mon_CR_Price.caption) : null], fields.mon_CR_Price.isInvalid],
            ["int_CR_Size", [fields.int_CR_Size.visible && fields.int_CR_Size.required ? ew.Validators.required(fields.int_CR_Size.caption) : null], fields.int_CR_Size.isInvalid],
            ["int_MU_Size", [fields.int_MU_Size.visible && fields.int_MU_Size.required ? ew.Validators.required(fields.int_MU_Size.caption) : null], fields.int_MU_Size.isInvalid],
            ["int_CR_Status", [fields.int_CR_Status.visible && fields.int_CR_Status.required ? ew.Validators.required(fields.int_CR_Status.caption) : null], fields.int_CR_Status.isInvalid],
            ["Is_Web_SignUp", [fields.Is_Web_SignUp.visible && fields.Is_Web_SignUp.required ? ew.Validators.required(fields.Is_Web_SignUp.caption) : null], fields.Is_Web_SignUp.isInvalid],
            ["int_TotSession", [fields.int_TotSession.visible && fields.int_TotSession.required ? ew.Validators.required(fields.int_TotSession.caption) : null], fields.int_TotSession.isInvalid],
            ["int_PerDaySession", [fields.int_PerDaySession.visible && fields.int_PerDaySession.required ? ew.Validators.required(fields.int_PerDaySession.caption) : null], fields.int_PerDaySession.isInvalid],
            ["int_Location_ID", [fields.int_Location_ID.visible && fields.int_Location_ID.required ? ew.Validators.required(fields.int_Location_ID.caption) : null], fields.int_Location_ID.isInvalid],
            ["int_Teacher_ID", [fields.int_Teacher_ID.visible && fields.int_Teacher_ID.required ? ew.Validators.required(fields.int_Teacher_ID.caption) : null], fields.int_Teacher_ID.isInvalid],
            ["str_CR_Notes", [fields.str_CR_Notes.visible && fields.str_CR_Notes.required ? ew.Validators.required(fields.str_CR_Notes.caption) : null], fields.str_CR_Notes.isInvalid],
            ["is_ZoomMeet", [fields.is_ZoomMeet.visible && fields.is_ZoomMeet.required ? ew.Validators.required(fields.is_ZoomMeet.caption) : null], fields.is_ZoomMeet.isInvalid],
            ["BulkCR_Set", [fields.BulkCR_Set.visible && fields.BulkCR_Set.required ? ew.Validators.required(fields.BulkCR_Set.caption) : null], fields.BulkCR_Set.isInvalid],
            ["str_Username", [fields.str_Username.visible && fields.str_Username.required ? ew.Validators.required(fields.str_Username.caption) : null], fields.str_Username.isInvalid],
            ["int_Day_Incremental", [fields.int_Day_Incremental.visible && fields.int_Day_Incremental.required ? ew.Validators.required(fields.int_Day_Incremental.caption) : null, ew.Validators.integer], fields.int_Day_Incremental.isInvalid],
            ["int_Reoccurrence", [fields.int_Reoccurrence.visible && fields.int_Reoccurrence.required ? ew.Validators.required(fields.int_Reoccurrence.caption) : null, ew.Validators.integer], fields.int_Reoccurrence.isInvalid],
            ["date_Start2", [fields.date_Start2.visible && fields.date_Start2.required ? ew.Validators.required(fields.date_Start2.caption) : null, ew.Validators.datetime(fields.date_Start2.clientFormatPattern)], fields.date_Start2.isInvalid],
            ["date_Start3", [fields.date_Start3.visible && fields.date_Start3.required ? ew.Validators.required(fields.date_Start3.caption) : null, ew.Validators.datetime(fields.date_Start3.clientFormatPattern)], fields.date_Start3.isInvalid],
            ["date_Start4", [fields.date_Start4.visible && fields.date_Start4.required ? ew.Validators.required(fields.date_Start4.caption) : null, ew.Validators.datetime(fields.date_Start4.clientFormatPattern)], fields.date_Start4.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Multi-Page
        .setMultiPage(true)

        // Dynamic selection lists
        .setLists({
            "int_CR_Product_ID": @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.ToClientList(tblClassRoomEdit)),
            "str_Package_Name": @Html.Raw(tblClassRoomEdit.str_Package_Name.ToClientList(tblClassRoomEdit)),
            "mon_CR_Price": @Html.Raw(tblClassRoomEdit.mon_CR_Price.ToClientList(tblClassRoomEdit)),
            "int_CR_Size": @Html.Raw(tblClassRoomEdit.int_CR_Size.ToClientList(tblClassRoomEdit)),
            "int_MU_Size": @Html.Raw(tblClassRoomEdit.int_MU_Size.ToClientList(tblClassRoomEdit)),
            "int_CR_Status": @Html.Raw(tblClassRoomEdit.int_CR_Status.ToClientList(tblClassRoomEdit)),
            "Is_Web_SignUp": @Html.Raw(tblClassRoomEdit.Is_Web_SignUp.ToClientList(tblClassRoomEdit)),
            "int_TotSession": @Html.Raw(tblClassRoomEdit.int_TotSession.ToClientList(tblClassRoomEdit)),
            "int_PerDaySession": @Html.Raw(tblClassRoomEdit.int_PerDaySession.ToClientList(tblClassRoomEdit)),
            "int_Location_ID": @Html.Raw(tblClassRoomEdit.int_Location_ID.ToClientList(tblClassRoomEdit)),
            "int_Teacher_ID": @Html.Raw(tblClassRoomEdit.int_Teacher_ID.ToClientList(tblClassRoomEdit)),
            "is_ZoomMeet": @Html.Raw(tblClassRoomEdit.is_ZoomMeet.ToClientList(tblClassRoomEdit)),
            "BulkCR_Set": @Html.Raw(tblClassRoomEdit.BulkCR_Set.ToClientList(tblClassRoomEdit)),
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (tblClassRoomEdit.IsConfirm) { // Confirm page
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="confirm" id="confirm" value="confirm">
} else {
<input type="hidden" name="action" id="action" value="confirm">
}
<input type="hidden" name="modal" value="@ConvertToInt(tblClassRoomEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(tblClassRoomEdit.OldKeyName)" value="@Html.Raw(tblClassRoomEdit.OldKey)">
<div class="ew-multi-page"><!-- multi-page -->
<div class="ew-nav@(tblClassRoomEdit.MultiPages.ContainerClasses)" id="pages_tblClassRoomEdit"><!-- multi-page tabs -->
    <ul class="@(tblClassRoomEdit.MultiPages.NavClasses)" role="tablist">
        <li class="nav-item"><button class="@(tblClassRoomEdit.MultiPages.NavLinkClasses(1))" data-bs-target="#tab_tblClassRoom1" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tblClassRoom1" aria-selected="@(ConvertToJson(tblClassRoomEdit.MultiPages.IsActive(1)))">@Html.Raw(tblClassRoomEdit.PageCaption(1))</button></li>
        <li class="nav-item"><button class="@(tblClassRoomEdit.MultiPages.NavLinkClasses(2))" data-bs-target="#tab_tblClassRoom2" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tblClassRoom2" aria-selected="@(ConvertToJson(tblClassRoomEdit.MultiPages.IsActive(2)))">@Html.Raw(tblClassRoomEdit.PageCaption(2))</button></li>
        <li class="nav-item"><button class="@(tblClassRoomEdit.MultiPages.NavLinkClasses(3))" data-bs-target="#tab_tblClassRoom3" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tblClassRoom3" aria-selected="@(ConvertToJson(tblClassRoomEdit.MultiPages.IsActive(3)))">@Html.Raw(tblClassRoomEdit.PageCaption(3))</button></li>
        <li class="nav-item"><button class="@(tblClassRoomEdit.MultiPages.NavLinkClasses(5))" data-bs-target="#tab_tblClassRoom5" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tblClassRoom5" aria-selected="@(ConvertToJson(tblClassRoomEdit.MultiPages.IsActive(5)))">@Html.Raw(tblClassRoomEdit.PageCaption(5))</button></li>
        <li class="nav-item"><button class="@(tblClassRoomEdit.MultiPages.NavLinkClasses(6))" data-bs-target="#tab_tblClassRoom6" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tblClassRoom6" aria-selected="@(ConvertToJson(tblClassRoomEdit.MultiPages.IsActive(6)))">@Html.Raw(tblClassRoomEdit.PageCaption(6))</button></li>
    </ul>
    <div class="@(tblClassRoomEdit.MultiPages.TabContentClasses)"><!-- multi-page tabs .tab-content -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(1))" id="tab_tblClassRoom1" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-edit-div"><!-- page* -->
@if (tblClassRoomEdit.str_CR_Number.Visible) { // tblClassRoomEdit.str_CR_Number.Visible (begin)
    <div id="r_str_CR_Number" @Html.Raw(tblClassRoomEdit.str_CR_Number.RowAttributes)>
        <label id="elh_tblClassRoom_str_CR_Number" for="x_str_CR_Number" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.str_CR_Number.Caption)@Html.Raw(tblClassRoomEdit.str_CR_Number.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.str_CR_Number.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // str_CR_Number (begin)
<span id="el_tblClassRoom_str_CR_Number">
<span @Html.Raw(tblClassRoomEdit.str_CR_Number.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.str_CR_Number.EditValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_str_CR_Number" data-hidden="1" data-page="1" name="x_str_CR_Number" id="x_str_CR_Number" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_CR_Number.CurrentValue))">
</span>
} else { // str_CR_Number (confirm)
<span @Html.Raw(tblClassRoomEdit.str_CR_Number.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.str_CR_Number.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_str_CR_Number" data-hidden="1" data-page="1" name="x_str_CR_Number" id="x_str_CR_Number" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_CR_Number.FormValue))">
} @* str_CR_Number (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.str_CR_Number.Visible (end) *@
@if (tblClassRoomEdit.int_CR_Product_ID.Visible) { // tblClassRoomEdit.int_CR_Product_ID.Visible (begin)
    <div id="r_int_CR_Product_ID" @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.RowAttributes)>
        <label id="elh_tblClassRoom_int_CR_Product_ID" for="x_int_CR_Product_ID" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_CR_Product_ID.Caption)@Html.Raw(tblClassRoomEdit.int_CR_Product_ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_CR_Product_ID (begin)
<span id="el_tblClassRoom_int_CR_Product_ID">
    <select
        id="x_int_CR_Product_ID"
        name="x_int_CR_Product_ID"
        class="form-select ew-select@(tblClassRoomEdit.int_CR_Product_ID.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_CR_Product_ID"
        data-table="tblClassRoom"
        data-field="x_int_CR_Product_ID"
        data-page="1"
        data-value-separator="@(tblClassRoomEdit.int_CR_Product_ID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_CR_Product_ID.PlaceHolder))"
        data-ew-action="update-options"
        @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.EditAttributes)>
        @(tblClassRoomEdit.int_CR_Product_ID.SelectOptionListHtml("x_int_CR_Product_ID"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_CR_Product_ID.GetErrorMessage())</div>
@Html.Raw(tblClassRoomEdit.int_CR_Product_ID.Lookup.GetParamTag(tblClassRoomEdit, "p_x_int_CR_Product_ID"))
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_CR_Product_ID", selectId: "ftblClassRoomedit_x_int_CR_Product_ID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_CR_Product_ID?.lookupOptions.length) {
        options.data = { id: "x_int_CR_Product_ID", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_CR_Product_ID", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_CR_Product_ID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_CR_Product_ID (confirm)
<span @Html.Raw(tblClassRoomEdit.int_CR_Product_ID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_CR_Product_ID.DisplayValue(tblClassRoomEdit.int_CR_Product_ID.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_CR_Product_ID" data-hidden="1" data-page="1" name="x_int_CR_Product_ID" id="x_int_CR_Product_ID" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_CR_Product_ID.FormValue))">
} @* int_CR_Product_ID (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_CR_Product_ID.Visible (end) *@
@if (tblClassRoomEdit.str_Package_Name.Visible) { // tblClassRoomEdit.str_Package_Name.Visible (begin)
    <div id="r_str_Package_Name" @Html.Raw(tblClassRoomEdit.str_Package_Name.RowAttributes)>
        <label id="elh_tblClassRoom_str_Package_Name" for="x_str_Package_Name" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.str_Package_Name.Caption)@Html.Raw(tblClassRoomEdit.str_Package_Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.str_Package_Name.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // str_Package_Name (begin)
<span id="el_tblClassRoom_str_Package_Name">
    <select
        id="x_str_Package_Name"
        name="x_str_Package_Name"
        class="form-select ew-select@(tblClassRoomEdit.str_Package_Name.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_str_Package_Name"
        data-table="tblClassRoom"
        data-field="x_str_Package_Name"
        data-page="1"
        data-value-separator="@(tblClassRoomEdit.str_Package_Name.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.str_Package_Name.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.str_Package_Name.EditAttributes)>
        @(tblClassRoomEdit.str_Package_Name.SelectOptionListHtml("x_str_Package_Name"))
    </select>
    @Html.Raw(tblClassRoomEdit.str_Package_Name.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.str_Package_Name.GetErrorMessage())</div>
@Html.Raw(tblClassRoomEdit.str_Package_Name.Lookup.GetParamTag(tblClassRoomEdit, "p_x_str_Package_Name"))
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_str_Package_Name", selectId: "ftblClassRoomedit_x_str_Package_Name" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.str_Package_Name?.lookupOptions.length) {
        options.data = { id: "x_str_Package_Name", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_str_Package_Name", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.str_Package_Name.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // str_Package_Name (confirm)
<span @Html.Raw(tblClassRoomEdit.str_Package_Name.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.str_Package_Name.DisplayValue(tblClassRoomEdit.str_Package_Name.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_str_Package_Name" data-hidden="1" data-page="1" name="x_str_Package_Name" id="x_str_Package_Name" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_Package_Name.FormValue))">
} @* str_Package_Name (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.str_Package_Name.Visible (end) *@
@if (tblClassRoomEdit.int_Location_ID.Visible) { // tblClassRoomEdit.int_Location_ID.Visible (begin)
    <div id="r_int_Location_ID" @Html.Raw(tblClassRoomEdit.int_Location_ID.RowAttributes)>
        <label id="elh_tblClassRoom_int_Location_ID" for="x_int_Location_ID" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_Location_ID.Caption)@Html.Raw(tblClassRoomEdit.int_Location_ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_Location_ID.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_Location_ID (begin)
<span id="el_tblClassRoom_int_Location_ID">
    <select
        id="x_int_Location_ID"
        name="x_int_Location_ID"
        class="form-select ew-select@(tblClassRoomEdit.int_Location_ID.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_Location_ID"
        data-table="tblClassRoom"
        data-field="x_int_Location_ID"
        data-page="1"
        data-value-separator="@(tblClassRoomEdit.int_Location_ID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_Location_ID.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_Location_ID.EditAttributes)>
        @(tblClassRoomEdit.int_Location_ID.SelectOptionListHtml("x_int_Location_ID"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_Location_ID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_Location_ID.GetErrorMessage())</div>
@Html.Raw(tblClassRoomEdit.int_Location_ID.Lookup.GetParamTag(tblClassRoomEdit, "p_x_int_Location_ID"))
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_Location_ID", selectId: "ftblClassRoomedit_x_int_Location_ID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_Location_ID?.lookupOptions.length) {
        options.data = { id: "x_int_Location_ID", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_Location_ID", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_Location_ID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_Location_ID (confirm)
<span @Html.Raw(tblClassRoomEdit.int_Location_ID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_Location_ID.DisplayValue(tblClassRoomEdit.int_Location_ID.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_Location_ID" data-hidden="1" data-page="1" name="x_int_Location_ID" id="x_int_Location_ID" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Location_ID.FormValue))">
} @* int_Location_ID (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_Location_ID.Visible (end) *@
@if (tblClassRoomEdit.int_Teacher_ID.Visible) { // tblClassRoomEdit.int_Teacher_ID.Visible (begin)
    <div id="r_int_Teacher_ID" @Html.Raw(tblClassRoomEdit.int_Teacher_ID.RowAttributes)>
        <label id="elh_tblClassRoom_int_Teacher_ID" for="x_int_Teacher_ID" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_Teacher_ID.Caption)@Html.Raw(tblClassRoomEdit.int_Teacher_ID.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_Teacher_ID.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_Teacher_ID (begin)
<span id="el_tblClassRoom_int_Teacher_ID">
    <select
        id="x_int_Teacher_ID"
        name="x_int_Teacher_ID"
        class="form-select ew-select@(tblClassRoomEdit.int_Teacher_ID.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_Teacher_ID"
        data-table="tblClassRoom"
        data-field="x_int_Teacher_ID"
        data-page="1"
        data-value-separator="@(tblClassRoomEdit.int_Teacher_ID.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_Teacher_ID.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_Teacher_ID.EditAttributes)>
        @(tblClassRoomEdit.int_Teacher_ID.SelectOptionListHtml("x_int_Teacher_ID"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_Teacher_ID.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_Teacher_ID.GetErrorMessage())</div>
@Html.Raw(tblClassRoomEdit.int_Teacher_ID.Lookup.GetParamTag(tblClassRoomEdit, "p_x_int_Teacher_ID"))
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_Teacher_ID", selectId: "ftblClassRoomedit_x_int_Teacher_ID" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_Teacher_ID?.lookupOptions.length) {
        options.data = { id: "x_int_Teacher_ID", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_Teacher_ID", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_Teacher_ID.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_Teacher_ID (confirm)
<span @Html.Raw(tblClassRoomEdit.int_Teacher_ID.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_Teacher_ID.DisplayValue(tblClassRoomEdit.int_Teacher_ID.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_Teacher_ID" data-hidden="1" data-page="1" name="x_int_Teacher_ID" id="x_int_Teacher_ID" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Teacher_ID.FormValue))">
} @* int_Teacher_ID (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_Teacher_ID.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(2))" id="tab_tblClassRoom2" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-edit-div"><!-- page* -->
@if (tblClassRoomEdit.int_CR_Size.Visible) { // tblClassRoomEdit.int_CR_Size.Visible (begin)
    <div id="r_int_CR_Size" @Html.Raw(tblClassRoomEdit.int_CR_Size.RowAttributes)>
        <label id="elh_tblClassRoom_int_CR_Size" for="x_int_CR_Size" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_CR_Size.Caption)@Html.Raw(tblClassRoomEdit.int_CR_Size.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_CR_Size.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_CR_Size (begin)
<span id="el_tblClassRoom_int_CR_Size">
    <select
        id="x_int_CR_Size"
        name="x_int_CR_Size"
        class="form-select ew-select@(tblClassRoomEdit.int_CR_Size.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_CR_Size"
        data-table="tblClassRoom"
        data-field="x_int_CR_Size"
        data-page="2"
        data-value-separator="@(tblClassRoomEdit.int_CR_Size.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_CR_Size.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_CR_Size.EditAttributes)>
        @(tblClassRoomEdit.int_CR_Size.SelectOptionListHtml("x_int_CR_Size"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_CR_Size.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_CR_Size.GetErrorMessage())</div>
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_CR_Size", selectId: "ftblClassRoomedit_x_int_CR_Size" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_CR_Size?.lookupOptions.length) {
        options.data = { id: "x_int_CR_Size", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_CR_Size", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_CR_Size.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_CR_Size (confirm)
<span @Html.Raw(tblClassRoomEdit.int_CR_Size.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_CR_Size.DisplayValue(tblClassRoomEdit.int_CR_Size.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_CR_Size" data-hidden="1" data-page="2" name="x_int_CR_Size" id="x_int_CR_Size" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_CR_Size.FormValue))">
} @* int_CR_Size (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_CR_Size.Visible (end) *@
@if (tblClassRoomEdit.int_MU_Size.Visible) { // tblClassRoomEdit.int_MU_Size.Visible (begin)
    <div id="r_int_MU_Size" @Html.Raw(tblClassRoomEdit.int_MU_Size.RowAttributes)>
        <label id="elh_tblClassRoom_int_MU_Size" for="x_int_MU_Size" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_MU_Size.Caption)@Html.Raw(tblClassRoomEdit.int_MU_Size.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_MU_Size.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_MU_Size (begin)
<span id="el_tblClassRoom_int_MU_Size">
    <select
        id="x_int_MU_Size"
        name="x_int_MU_Size"
        class="form-select ew-select@(tblClassRoomEdit.int_MU_Size.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_MU_Size"
        data-table="tblClassRoom"
        data-field="x_int_MU_Size"
        data-page="2"
        data-value-separator="@(tblClassRoomEdit.int_MU_Size.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_MU_Size.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_MU_Size.EditAttributes)>
        @(tblClassRoomEdit.int_MU_Size.SelectOptionListHtml("x_int_MU_Size"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_MU_Size.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_MU_Size.GetErrorMessage())</div>
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_MU_Size", selectId: "ftblClassRoomedit_x_int_MU_Size" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_MU_Size?.lookupOptions.length) {
        options.data = { id: "x_int_MU_Size", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_MU_Size", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_MU_Size.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_MU_Size (confirm)
<span @Html.Raw(tblClassRoomEdit.int_MU_Size.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_MU_Size.DisplayValue(tblClassRoomEdit.int_MU_Size.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_MU_Size" data-hidden="1" data-page="2" name="x_int_MU_Size" id="x_int_MU_Size" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_MU_Size.FormValue))">
} @* int_MU_Size (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_MU_Size.Visible (end) *@
@if (tblClassRoomEdit.int_CR_Status.Visible) { // tblClassRoomEdit.int_CR_Status.Visible (begin)
    <div id="r_int_CR_Status" @Html.Raw(tblClassRoomEdit.int_CR_Status.RowAttributes)>
        <label id="elh_tblClassRoom_int_CR_Status" for="x_int_CR_Status" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_CR_Status.Caption)@Html.Raw(tblClassRoomEdit.int_CR_Status.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_CR_Status.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_CR_Status (begin)
<span id="el_tblClassRoom_int_CR_Status">
    <select
        id="x_int_CR_Status"
        name="x_int_CR_Status"
        class="form-select ew-select@(tblClassRoomEdit.int_CR_Status.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_CR_Status"
        data-table="tblClassRoom"
        data-field="x_int_CR_Status"
        data-page="2"
        data-value-separator="@(tblClassRoomEdit.int_CR_Status.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_CR_Status.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_CR_Status.EditAttributes)>
        @(tblClassRoomEdit.int_CR_Status.SelectOptionListHtml("x_int_CR_Status"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_CR_Status.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_CR_Status.GetErrorMessage())</div>
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_CR_Status", selectId: "ftblClassRoomedit_x_int_CR_Status" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_CR_Status?.lookupOptions.length) {
        options.data = { id: "x_int_CR_Status", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_CR_Status", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_CR_Status.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_CR_Status (confirm)
<span @Html.Raw(tblClassRoomEdit.int_CR_Status.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_CR_Status.DisplayValue(tblClassRoomEdit.int_CR_Status.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_CR_Status" data-hidden="1" data-page="2" name="x_int_CR_Status" id="x_int_CR_Status" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_CR_Status.FormValue))">
} @* int_CR_Status (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_CR_Status.Visible (end) *@
@if (tblClassRoomEdit.Is_Web_SignUp.Visible) { // tblClassRoomEdit.Is_Web_SignUp.Visible (begin)
    <div id="r_Is_Web_SignUp" @Html.Raw(tblClassRoomEdit.Is_Web_SignUp.RowAttributes)>
        <label id="elh_tblClassRoom_Is_Web_SignUp" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.Is_Web_SignUp.Caption)@Html.Raw(tblClassRoomEdit.Is_Web_SignUp.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.Is_Web_SignUp.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // Is_Web_SignUp (begin)
<span id="el_tblClassRoom_Is_Web_SignUp">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(tblClassRoomEdit.Is_Web_SignUp.IsInvalidClass)" data-table="tblClassRoom" data-field="x_Is_Web_SignUp" data-boolean data-page="2" name="x_Is_Web_SignUp" id="x_Is_Web_SignUp" value="1" checked="@ConvertToBool(tblClassRoomEdit.Is_Web_SignUp.CurrentValue)" @Html.Raw(tblClassRoomEdit.Is_Web_SignUp.EditAttributes) aria-describedby="x_Is_Web_SignUp_help">
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.Is_Web_SignUp.GetErrorMessage())</div>
</div>
@Html.Raw(tblClassRoomEdit.Is_Web_SignUp.GetCustomMessage)
</span>
} else { // Is_Web_SignUp (confirm)
<span @Html.Raw(tblClassRoomEdit.Is_Web_SignUp.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_Is_Web_SignUp_@(tblClassRoomEdit.RowCount)" class="form-check-input" value="@(tblClassRoomEdit.Is_Web_SignUp.ViewValue)" disabled checked="@(ConvertToBool(tblClassRoomEdit.Is_Web_SignUp.CurrentValue))">
    <label class="form-check-label" for="x_Is_Web_SignUp_@(tblClassRoomEdit.RowCount)"></label>
</div></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_Is_Web_SignUp" data-hidden="1" data-page="2" name="x_Is_Web_SignUp" id="x_Is_Web_SignUp" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.Is_Web_SignUp.FormValue))">
} @* Is_Web_SignUp (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.Is_Web_SignUp.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(3))" id="tab_tblClassRoom3" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-edit-div"><!-- page* -->
@if (tblClassRoomEdit.date_Start.Visible) { // tblClassRoomEdit.date_Start.Visible (begin)
    <div id="r_date_Start" @Html.Raw(tblClassRoomEdit.date_Start.RowAttributes)>
        <label id="elh_tblClassRoom_date_Start" for="x_date_Start" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.date_Start.Caption)@Html.Raw(tblClassRoomEdit.date_Start.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.date_Start.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // date_Start (begin)
<span id="el_tblClassRoom_date_Start">
<input type="@(tblClassRoomEdit.date_Start.InputTextType)" name="x_date_Start" id="x_date_Start" data-table="tblClassRoom" data-field="x_date_Start" value="@Html.Raw(tblClassRoomEdit.date_Start.EditValue)" data-page="3" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.date_Start.FormatPattern)"@Html.Raw(tblClassRoomEdit.date_Start.EditAttributes) aria-describedby="x_date_Start_help">
@Html.Raw(tblClassRoomEdit.date_Start.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.date_Start.GetErrorMessage())</div>
@if (!tblClassRoomEdit.date_Start.ReadOnly && !tblClassRoomEdit.date_Start.Disabled && !tblClassRoomEdit.date_Start.EditAttrs.Is("readonly") && !tblClassRoomEdit.date_Start.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["ftblClassRoomedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(16))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("ftblClassRoomedit", "x_date_Start", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
} else { // date_Start (confirm)
<span @Html.Raw(tblClassRoomEdit.date_Start.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.date_Start.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_date_Start" data-hidden="1" data-page="3" name="x_date_Start" id="x_date_Start" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start.FormValue))">
} @* date_Start (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.date_Start.Visible (end) *@
@if (tblClassRoomEdit.mon_CR_Price.Visible) { // tblClassRoomEdit.mon_CR_Price.Visible (begin)
    <div id="r_mon_CR_Price" @Html.Raw(tblClassRoomEdit.mon_CR_Price.RowAttributes)>
        <label id="elh_tblClassRoom_mon_CR_Price" for="x_mon_CR_Price" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.mon_CR_Price.Caption)@Html.Raw(tblClassRoomEdit.mon_CR_Price.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.mon_CR_Price.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // mon_CR_Price (begin)
<span id="el_tblClassRoom_mon_CR_Price">
    <select
        id="x_mon_CR_Price"
        name="x_mon_CR_Price"
        class="form-select ew-select@(tblClassRoomEdit.mon_CR_Price.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_mon_CR_Price"
        data-table="tblClassRoom"
        data-field="x_mon_CR_Price"
        data-page="3"
        data-value-separator="@(tblClassRoomEdit.mon_CR_Price.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.mon_CR_Price.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.mon_CR_Price.EditAttributes)>
        @(tblClassRoomEdit.mon_CR_Price.SelectOptionListHtml("x_mon_CR_Price"))
    </select>
    @Html.Raw(tblClassRoomEdit.mon_CR_Price.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.mon_CR_Price.GetErrorMessage())</div>
@Html.Raw(tblClassRoomEdit.mon_CR_Price.Lookup.GetParamTag(tblClassRoomEdit, "p_x_mon_CR_Price"))
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_mon_CR_Price", selectId: "ftblClassRoomedit_x_mon_CR_Price" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.mon_CR_Price?.lookupOptions.length) {
        options.data = { id: "x_mon_CR_Price", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_mon_CR_Price", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.mon_CR_Price.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // mon_CR_Price (confirm)
<span @Html.Raw(tblClassRoomEdit.mon_CR_Price.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.mon_CR_Price.DisplayValue(tblClassRoomEdit.mon_CR_Price.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_mon_CR_Price" data-hidden="1" data-page="3" name="x_mon_CR_Price" id="x_mon_CR_Price" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.mon_CR_Price.FormValue))">
} @* mon_CR_Price (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.mon_CR_Price.Visible (end) *@
@if (tblClassRoomEdit.int_TotSession.Visible) { // tblClassRoomEdit.int_TotSession.Visible (begin)
    <div id="r_int_TotSession" @Html.Raw(tblClassRoomEdit.int_TotSession.RowAttributes)>
        <label id="elh_tblClassRoom_int_TotSession" for="x_int_TotSession" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_TotSession.Caption)@Html.Raw(tblClassRoomEdit.int_TotSession.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_TotSession.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_TotSession (begin)
<span id="el_tblClassRoom_int_TotSession">
    <select
        id="x_int_TotSession"
        name="x_int_TotSession"
        class="form-select ew-select@(tblClassRoomEdit.int_TotSession.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_TotSession"
        data-table="tblClassRoom"
        data-field="x_int_TotSession"
        data-page="3"
        data-value-separator="@(tblClassRoomEdit.int_TotSession.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_TotSession.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_TotSession.EditAttributes)>
        @(tblClassRoomEdit.int_TotSession.SelectOptionListHtml("x_int_TotSession"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_TotSession.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_TotSession.GetErrorMessage())</div>
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_TotSession", selectId: "ftblClassRoomedit_x_int_TotSession" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_TotSession?.lookupOptions.length) {
        options.data = { id: "x_int_TotSession", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_TotSession", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_TotSession.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_TotSession (confirm)
<span @Html.Raw(tblClassRoomEdit.int_TotSession.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_TotSession.DisplayValue(tblClassRoomEdit.int_TotSession.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_TotSession" data-hidden="1" data-page="3" name="x_int_TotSession" id="x_int_TotSession" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_TotSession.FormValue))">
} @* int_TotSession (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_TotSession.Visible (end) *@
@if (tblClassRoomEdit.int_PerDaySession.Visible) { // tblClassRoomEdit.int_PerDaySession.Visible (begin)
    <div id="r_int_PerDaySession" @Html.Raw(tblClassRoomEdit.int_PerDaySession.RowAttributes)>
        <label id="elh_tblClassRoom_int_PerDaySession" for="x_int_PerDaySession" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_PerDaySession.Caption)@Html.Raw(tblClassRoomEdit.int_PerDaySession.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_PerDaySession.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_PerDaySession (begin)
<span id="el_tblClassRoom_int_PerDaySession">
    <select
        id="x_int_PerDaySession"
        name="x_int_PerDaySession"
        class="form-select ew-select@(tblClassRoomEdit.int_PerDaySession.IsInvalidClass)"
        data-select2-id="ftblClassRoomedit_x_int_PerDaySession"
        data-table="tblClassRoom"
        data-field="x_int_PerDaySession"
        data-page="3"
        data-value-separator="@(tblClassRoomEdit.int_PerDaySession.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(tblClassRoomEdit.int_PerDaySession.PlaceHolder))"
        @Html.Raw(tblClassRoomEdit.int_PerDaySession.EditAttributes)>
        @(tblClassRoomEdit.int_PerDaySession.SelectOptionListHtml("x_int_PerDaySession"))
    </select>
    @Html.Raw(tblClassRoomEdit.int_PerDaySession.GetCustomMessage)
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_PerDaySession.GetErrorMessage())</div>
<script>
loadjs.ready("ftblClassRoomedit", function() {
    var options = { name: "x_int_PerDaySession", selectId: "ftblClassRoomedit_x_int_PerDaySession" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftblClassRoomedit.lists.int_PerDaySession?.lookupOptions.length) {
        options.data = { id: "x_int_PerDaySession", form: "ftblClassRoomedit" };
    } else {
        options.ajax = { id: "x_int_PerDaySession", form: "ftblClassRoomedit", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tblClassRoom.fields.int_PerDaySession.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
} else { // int_PerDaySession (confirm)
<span @Html.Raw(tblClassRoomEdit.int_PerDaySession.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.int_PerDaySession.DisplayValue(tblClassRoomEdit.int_PerDaySession.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_PerDaySession" data-hidden="1" data-page="3" name="x_int_PerDaySession" id="x_int_PerDaySession" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_PerDaySession.FormValue))">
} @* int_PerDaySession (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_PerDaySession.Visible (end) *@
@if (tblClassRoomEdit.date_Start2.Visible) { // tblClassRoomEdit.date_Start2.Visible (begin)
    <div id="r_date_Start2" @Html.Raw(tblClassRoomEdit.date_Start2.RowAttributes)>
        <label id="elh_tblClassRoom_date_Start2" for="x_date_Start2" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.date_Start2.Caption)@Html.Raw(tblClassRoomEdit.date_Start2.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.date_Start2.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // date_Start2 (begin)
<span id="el_tblClassRoom_date_Start2">
<input type="@(tblClassRoomEdit.date_Start2.InputTextType)" name="x_date_Start2" id="x_date_Start2" data-table="tblClassRoom" data-field="x_date_Start2" value="@Html.Raw(tblClassRoomEdit.date_Start2.EditValue)" data-page="3" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start2.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.date_Start2.FormatPattern)"@Html.Raw(tblClassRoomEdit.date_Start2.EditAttributes) aria-describedby="x_date_Start2_help">
@Html.Raw(tblClassRoomEdit.date_Start2.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.date_Start2.GetErrorMessage())</div>
@if (!tblClassRoomEdit.date_Start2.ReadOnly && !tblClassRoomEdit.date_Start2.Disabled && !tblClassRoomEdit.date_Start2.EditAttrs.Is("readonly") && !tblClassRoomEdit.date_Start2.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["ftblClassRoomedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(16))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("ftblClassRoomedit", "x_date_Start2", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
} else { // date_Start2 (confirm)
<span @Html.Raw(tblClassRoomEdit.date_Start2.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.date_Start2.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_date_Start2" data-hidden="1" data-page="3" name="x_date_Start2" id="x_date_Start2" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start2.FormValue))">
} @* date_Start2 (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.date_Start2.Visible (end) *@
@if (tblClassRoomEdit.date_Start3.Visible) { // tblClassRoomEdit.date_Start3.Visible (begin)
    <div id="r_date_Start3" @Html.Raw(tblClassRoomEdit.date_Start3.RowAttributes)>
        <label id="elh_tblClassRoom_date_Start3" for="x_date_Start3" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.date_Start3.Caption)@Html.Raw(tblClassRoomEdit.date_Start3.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.date_Start3.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // date_Start3 (begin)
<span id="el_tblClassRoom_date_Start3">
<input type="@(tblClassRoomEdit.date_Start3.InputTextType)" name="x_date_Start3" id="x_date_Start3" data-table="tblClassRoom" data-field="x_date_Start3" value="@Html.Raw(tblClassRoomEdit.date_Start3.EditValue)" data-page="3" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start3.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.date_Start3.FormatPattern)"@Html.Raw(tblClassRoomEdit.date_Start3.EditAttributes) aria-describedby="x_date_Start3_help">
@Html.Raw(tblClassRoomEdit.date_Start3.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.date_Start3.GetErrorMessage())</div>
@if (!tblClassRoomEdit.date_Start3.ReadOnly && !tblClassRoomEdit.date_Start3.Disabled && !tblClassRoomEdit.date_Start3.EditAttrs.Is("readonly") && !tblClassRoomEdit.date_Start3.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["ftblClassRoomedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(16))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("ftblClassRoomedit", "x_date_Start3", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
} else { // date_Start3 (confirm)
<span @Html.Raw(tblClassRoomEdit.date_Start3.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.date_Start3.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_date_Start3" data-hidden="1" data-page="3" name="x_date_Start3" id="x_date_Start3" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start3.FormValue))">
} @* date_Start3 (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.date_Start3.Visible (end) *@
@if (tblClassRoomEdit.date_Start4.Visible) { // tblClassRoomEdit.date_Start4.Visible (begin)
    <div id="r_date_Start4" @Html.Raw(tblClassRoomEdit.date_Start4.RowAttributes)>
        <label id="elh_tblClassRoom_date_Start4" for="x_date_Start4" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.date_Start4.Caption)@Html.Raw(tblClassRoomEdit.date_Start4.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.date_Start4.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // date_Start4 (begin)
<span id="el_tblClassRoom_date_Start4">
<input type="@(tblClassRoomEdit.date_Start4.InputTextType)" name="x_date_Start4" id="x_date_Start4" data-table="tblClassRoom" data-field="x_date_Start4" value="@Html.Raw(tblClassRoomEdit.date_Start4.EditValue)" data-page="3" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start4.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.date_Start4.FormatPattern)"@Html.Raw(tblClassRoomEdit.date_Start4.EditAttributes) aria-describedby="x_date_Start4_help">
@Html.Raw(tblClassRoomEdit.date_Start4.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.date_Start4.GetErrorMessage())</div>
@if (!tblClassRoomEdit.date_Start4.ReadOnly && !tblClassRoomEdit.date_Start4.Disabled && !tblClassRoomEdit.date_Start4.EditAttrs.Is("readonly") && !tblClassRoomEdit.date_Start4.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["ftblClassRoomedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(16))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("ftblClassRoomedit", "x_date_Start4", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
} else { // date_Start4 (confirm)
<span @Html.Raw(tblClassRoomEdit.date_Start4.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.date_Start4.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_date_Start4" data-hidden="1" data-page="3" name="x_date_Start4" id="x_date_Start4" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.date_Start4.FormValue))">
} @* date_Start4 (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.date_Start4.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(4))" id="tab_tblClassRoom4" role="tabpanel"><!-- multi-page .tab-pane -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(5))" id="tab_tblClassRoom5" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-edit-div"><!-- page* -->
@if (tblClassRoomEdit.BulkCR_Set.Visible) { // tblClassRoomEdit.BulkCR_Set.Visible (begin)
    <div id="r_BulkCR_Set" @Html.Raw(tblClassRoomEdit.BulkCR_Set.RowAttributes)>
        <label id="elh_tblClassRoom_BulkCR_Set" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.BulkCR_Set.Caption)@Html.Raw(tblClassRoomEdit.BulkCR_Set.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.BulkCR_Set.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // BulkCR_Set (begin)
<span id="el_tblClassRoom_BulkCR_Set">
<template id="tp_x_BulkCR_Set">
    <div class="form-check">
        <input type="checkbox" class="form-check-input" data-table="tblClassRoom" data-field="x_BulkCR_Set" name="x_BulkCR_Set" id="x_BulkCR_Set"@Html.Raw(tblClassRoomEdit.BulkCR_Set.EditAttributes)>
        <label class="form-check-label"></label>
    </div>
</template>
<div id="dsl_x_BulkCR_Set" class="ew-item-list"></div>
<selection-list hidden
    id="x_BulkCR_Set[]"
    name="x_BulkCR_Set[]"
    value="@(HtmlEncode(tblClassRoomEdit.BulkCR_Set.CurrentValue))"
    data-type="select-multiple"
    data-template="tp_x_BulkCR_Set"
    data-target="dsl_x_BulkCR_Set"
    data-repeatcolumn="5"
    class="form-control@(tblClassRoomEdit.BulkCR_Set.IsInvalidClass)"
    data-table="tblClassRoom"
    data-field="x_BulkCR_Set"
    data-page="5"
    data-value-separator="@(tblClassRoomEdit.BulkCR_Set.DisplayValueSeparatorAttribute)"
    @Html.Raw(tblClassRoomEdit.BulkCR_Set.EditAttributes)></selection-list>
@Html.Raw(tblClassRoomEdit.BulkCR_Set.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.BulkCR_Set.GetErrorMessage())</div>
</span>
} else { // BulkCR_Set (confirm)
<span @Html.Raw(tblClassRoomEdit.BulkCR_Set.ViewAttributes)>
<span class="form-control-plaintext">@Html.Raw(tblClassRoomEdit.BulkCR_Set.DisplayValue(tblClassRoomEdit.BulkCR_Set.ViewValue))</span></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_BulkCR_Set" data-hidden="1" data-page="5" name="x_BulkCR_Set[]" id="x_BulkCR_Set[]" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.BulkCR_Set.FormValue))">
} @* BulkCR_Set (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.BulkCR_Set.Visible (end) *@
@if (tblClassRoomEdit.int_Day_Incremental.Visible) { // tblClassRoomEdit.int_Day_Incremental.Visible (begin)
    <div id="r_int_Day_Incremental" @Html.Raw(tblClassRoomEdit.int_Day_Incremental.RowAttributes)>
        <label id="elh_tblClassRoom_int_Day_Incremental" for="x_int_Day_Incremental" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_Day_Incremental.Caption)@Html.Raw(tblClassRoomEdit.int_Day_Incremental.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_Day_Incremental.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_Day_Incremental (begin)
<span id="el_tblClassRoom_int_Day_Incremental">
<input type="@(tblClassRoomEdit.int_Day_Incremental.InputTextType)" name="x_int_Day_Incremental" id="x_int_Day_Incremental" data-table="tblClassRoom" data-field="x_int_Day_Incremental" value="@Html.Raw(tblClassRoomEdit.int_Day_Incremental.EditValue)" data-page="5" size="30" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Day_Incremental.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.int_Day_Incremental.FormatPattern)"@Html.Raw(tblClassRoomEdit.int_Day_Incremental.EditAttributes) aria-describedby="x_int_Day_Incremental_help">
@Html.Raw(tblClassRoomEdit.int_Day_Incremental.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_Day_Incremental.GetErrorMessage())</div>
</span>
} else { // int_Day_Incremental (confirm)
<span @Html.Raw(tblClassRoomEdit.int_Day_Incremental.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.int_Day_Incremental.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_Day_Incremental" data-hidden="1" data-page="5" name="x_int_Day_Incremental" id="x_int_Day_Incremental" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Day_Incremental.FormValue))">
} @* int_Day_Incremental (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_Day_Incremental.Visible (end) *@
@if (tblClassRoomEdit.int_Reoccurrence.Visible) { // tblClassRoomEdit.int_Reoccurrence.Visible (begin)
    <div id="r_int_Reoccurrence" @Html.Raw(tblClassRoomEdit.int_Reoccurrence.RowAttributes)>
        <label id="elh_tblClassRoom_int_Reoccurrence" for="x_int_Reoccurrence" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.int_Reoccurrence.Caption)@Html.Raw(tblClassRoomEdit.int_Reoccurrence.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.int_Reoccurrence.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // int_Reoccurrence (begin)
<span id="el_tblClassRoom_int_Reoccurrence">
<input type="@(tblClassRoomEdit.int_Reoccurrence.InputTextType)" name="x_int_Reoccurrence" id="x_int_Reoccurrence" data-table="tblClassRoom" data-field="x_int_Reoccurrence" value="@Html.Raw(tblClassRoomEdit.int_Reoccurrence.EditValue)" data-page="5" size="30" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Reoccurrence.PlaceHolder))" data-format-pattern="@(tblClassRoomEdit.int_Reoccurrence.FormatPattern)"@Html.Raw(tblClassRoomEdit.int_Reoccurrence.EditAttributes) aria-describedby="x_int_Reoccurrence_help">
@Html.Raw(tblClassRoomEdit.int_Reoccurrence.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.int_Reoccurrence.GetErrorMessage())</div>
</span>
} else { // int_Reoccurrence (confirm)
<span @Html.Raw(tblClassRoomEdit.int_Reoccurrence.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(tblClassRoomEdit.int_Reoccurrence.ViewValue)))"></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_int_Reoccurrence" data-hidden="1" data-page="5" name="x_int_Reoccurrence" id="x_int_Reoccurrence" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_Reoccurrence.FormValue))">
} @* int_Reoccurrence (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.int_Reoccurrence.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(tblClassRoomEdit.MultiPages.TabPaneClasses(6))" id="tab_tblClassRoom6" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-edit-div"><!-- page* -->
@if (tblClassRoomEdit.str_CR_Notes.Visible) { // tblClassRoomEdit.str_CR_Notes.Visible (begin)
    <div id="r_str_CR_Notes" @Html.Raw(tblClassRoomEdit.str_CR_Notes.RowAttributes)>
        <label id="elh_tblClassRoom_str_CR_Notes" for="x_str_CR_Notes" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.str_CR_Notes.Caption)@Html.Raw(tblClassRoomEdit.str_CR_Notes.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.str_CR_Notes.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // str_CR_Notes (begin)
<span id="el_tblClassRoom_str_CR_Notes">
<textarea data-table="tblClassRoom" data-field="x_str_CR_Notes" data-page="6" name="x_str_CR_Notes" id="x_str_CR_Notes" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_CR_Notes.PlaceHolder))"@Html.Raw(tblClassRoomEdit.str_CR_Notes.EditAttributes) aria-describedby="x_str_CR_Notes_help">@(tblClassRoomEdit.str_CR_Notes.EditValue)</textarea>
@Html.Raw(tblClassRoomEdit.str_CR_Notes.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.str_CR_Notes.GetErrorMessage())</div>
</span>
} else { // str_CR_Notes (confirm)
<span @Html.Raw(tblClassRoomEdit.str_CR_Notes.ViewAttributes)>
@Html.Raw(tblClassRoomEdit.str_CR_Notes.ViewValue)</span>
<input type="hidden" data-table="tblClassRoom" data-field="x_str_CR_Notes" data-hidden="1" data-page="6" name="x_str_CR_Notes" id="x_str_CR_Notes" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_CR_Notes.FormValue))">
} @* str_CR_Notes (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.str_CR_Notes.Visible (end) *@
@if (tblClassRoomEdit.is_ZoomMeet.Visible) { // tblClassRoomEdit.is_ZoomMeet.Visible (begin)
    <div id="r_is_ZoomMeet" @Html.Raw(tblClassRoomEdit.is_ZoomMeet.RowAttributes)>
        <label id="elh_tblClassRoom_is_ZoomMeet" class="@(tblClassRoomEdit.LeftColumnClass)">@Html.Raw(tblClassRoomEdit.is_ZoomMeet.Caption)@Html.Raw(tblClassRoomEdit.is_ZoomMeet.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(tblClassRoomEdit.RightColumnClass)"><div @Html.Raw(tblClassRoomEdit.is_ZoomMeet.CellAttributes)>
@if (!tblClassRoomEdit.IsConfirm) { // is_ZoomMeet (begin)
<span id="el_tblClassRoom_is_ZoomMeet">
<div class="form-check d-inline-block">
    <input type="checkbox" class="form-check-input@(tblClassRoomEdit.is_ZoomMeet.IsInvalidClass)" data-table="tblClassRoom" data-field="x_is_ZoomMeet" data-boolean data-page="6" name="x_is_ZoomMeet" id="x_is_ZoomMeet" value="1" checked="@ConvertToBool(tblClassRoomEdit.is_ZoomMeet.CurrentValue)" @Html.Raw(tblClassRoomEdit.is_ZoomMeet.EditAttributes) aria-describedby="x_is_ZoomMeet_help">
    <div class="invalid-feedback">@Html.Raw(tblClassRoomEdit.is_ZoomMeet.GetErrorMessage())</div>
</div>
@Html.Raw(tblClassRoomEdit.is_ZoomMeet.GetCustomMessage)
</span>
} else { // is_ZoomMeet (confirm)
<span @Html.Raw(tblClassRoomEdit.is_ZoomMeet.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_is_ZoomMeet_@(tblClassRoomEdit.RowCount)" class="form-check-input" value="@(tblClassRoomEdit.is_ZoomMeet.ViewValue)" disabled checked="@(ConvertToBool(tblClassRoomEdit.is_ZoomMeet.CurrentValue))">
    <label class="form-check-label" for="x_is_ZoomMeet_@(tblClassRoomEdit.RowCount)"></label>
</div></span>
<input type="hidden" data-table="tblClassRoom" data-field="x_is_ZoomMeet" data-hidden="1" data-page="6" name="x_is_ZoomMeet" id="x_is_ZoomMeet" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.is_ZoomMeet.FormValue))">
} @* is_ZoomMeet (end) *@
</div></div>
    </div>
} @* tblClassRoomEdit.is_ZoomMeet.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
    </div><!-- /multi-page tabs .tab-content -->
</div><!-- /multi-page tabs -->
</div><!-- /multi-page -->
@if (!tblClassRoomEdit.IsConfirm) { // str_Username (begin)
} else { // str_Username (confirm)
<input type="hidden" data-table="tblClassRoom" data-field="x_str_Username" data-hidden="1" data-page="1" name="x_str_Username" id="x_str_Username" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.str_Username.FormValue))">
} @* str_Username (end) *@
    <input type="hidden" data-table="tblClassRoom" data-field="x_int_CR_ID" data-hidden="1" name="x_int_CR_ID" id="x_int_CR_ID" value="@Html.Raw(HtmlEncode(tblClassRoomEdit.int_CR_ID.CurrentValue))">
@{ tblClassRoomEdit.CloseRecordset(); }
@Html.Raw(tblClassRoomEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(tblClassRoomEdit.OffsetColumnClass)"><!-- buttons offset -->
@if (!tblClassRoomEdit.IsConfirm) { // Confirm page
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftblClassRoomedit" data-ew-action="set-action" data-value="confirm">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="ftblClassRoomedit" data-href="@AppPath(tblClassRoomEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
} else {
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftblClassRoomedit">@Html.Raw(Language.Phrase("ConfirmBtn"))</button>
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="submit" form="ftblClassRoomedit" data-ew-action="set-action" data-value="cancel">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(tblClassRoomEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
</main>
@tblClassRoomEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("tblClassRoom");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
