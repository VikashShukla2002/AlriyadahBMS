@if (tblRptMgrInvoicesList.ModalGridAdd && tblRptMgrInvoicesList.IsGridAdd || tblRptMgrInvoicesList.ModalGridEdit && tblRptMgrInvoicesList.IsGridEdit || tblRptMgrInvoicesList.ModalMultiEdit && tblRptMgrInvoicesList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(tblRptMgrInvoicesList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tblRptMgrInvoices: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(tblRptMgrInvoicesList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(tblRptMgrInvoicesList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(tblRptMgrInvoicesList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(tblRptMgrInvoicesList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<div class="card ew-card ew-grid@(tblRptMgrInvoicesList.IsAddOrEdit ? " ew-grid-add-edit" : "") @(tblRptMgrInvoicesList.TableGridClass)">
@if (!tblRptMgrInvoicesList.IsExport()) {
<div class="card-header ew-grid-upper-panel">
@if (!tblRptMgrInvoicesList.IsGridAdd && !(tblRptMgrInvoicesList.IsGridEdit && tblRptMgrInvoicesList.ModalGridEdit) && !tblRptMgrInvoicesList.IsMultiEdit) {
@Html.Raw(tblRptMgrInvoicesList.Pager.Render())
}
<div class="ew-list-other-options">
@tblRptMgrInvoicesList.OtherOptions.RenderBody()
</div>
</div>
}
<form name="@(tblRptMgrInvoicesList.FormName)" id="@(tblRptMgrInvoicesList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(tblRptMgrInvoicesList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (tblRptMgrInvoicesList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div id="gmp_tblRptMgrInvoices" class="card-body ew-grid-middle-panel @(tblRptMgrInvoicesList.TableContainerClass)" style="@(tblRptMgrInvoicesList.TableContainerStyle)">
@if (tblRptMgrInvoicesList.TotalRecords > 0 || tblRptMgrInvoicesList.IsGridEdit || tblRptMgrInvoicesList.IsMultiEdit) {
<table id="tbl_tblRptMgrInvoiceslist" class="@(tblRptMgrInvoicesList.TableClass)"><!-- .ew-table -->
<thead>
    <tr class="ew-table-header">
@{
    // Header row
    tblRptMgrInvoicesList.RowType = RowType.Header;

    // Render list options
    await tblRptMgrInvoicesList.RenderListOptions();
}
@* Render list options (header, left) *@
@tblRptMgrInvoicesList.ListOptions.RenderHeader("left")
@if (tblRptMgrInvoicesList.NationalID.Visible) { // tblRptMgrInvoicesList.NationalID.Visible (begin)
        <th data-name="NationalID" class="@(tblRptMgrInvoicesList.NationalID.HeaderCellClass)"><div id="elh_tblRptMgrInvoices_NationalID" class="tblRptMgrInvoices_NationalID">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.NationalID))</div></th>
} @* tblRptMgrInvoicesList.NationalID.Visible (end) *@
@if (tblRptMgrInvoicesList.Report_Date.Visible) { // tblRptMgrInvoicesList.Report_Date.Visible (begin)
        <th data-name="Report_Date" class="@(tblRptMgrInvoicesList.Report_Date.HeaderCellClass)"><div id="elh_tblRptMgrInvoices_Report_Date" class="tblRptMgrInvoices_Report_Date">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.Report_Date))</div></th>
} @* tblRptMgrInvoicesList.Report_Date.Visible (end) *@
@if (tblRptMgrInvoicesList.str_Username.Visible) { // tblRptMgrInvoicesList.str_Username.Visible (begin)
        <th data-name="str_Username" class="@(tblRptMgrInvoicesList.str_Username.HeaderCellClass)"><div id="elh_tblRptMgrInvoices_str_Username" class="tblRptMgrInvoices_str_Username">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.str_Username))</div></th>
} @* tblRptMgrInvoicesList.str_Username.Visible (end) *@
@if (tblRptMgrInvoicesList.Report_Link.Visible) { // tblRptMgrInvoicesList.Report_Link.Visible (begin)
        <th data-name="Report_Link" class="@(tblRptMgrInvoicesList.Report_Link.HeaderCellClass)"><div id="elh_tblRptMgrInvoices_Report_Link" class="tblRptMgrInvoices_Report_Link">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.Report_Link))</div></th>
} @* tblRptMgrInvoicesList.Report_Link.Visible (end) *@
@* Render list options (header, right) *@
@tblRptMgrInvoicesList.ListOptions.RenderHeader("right")
    </tr>
</thead>
<tbody data-page="@(tblRptMgrInvoicesList.PageNumber)">
@{
    await tblRptMgrInvoicesList.SetupGrid();
    bool eof = tblRptMgrInvoicesList.Recordset == null; // DN
}
@while (tblRptMgrInvoicesList.RecordCount < tblRptMgrInvoicesList.StopRecord || SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$") &&
        (!tblRptMgrInvoicesList.IsGridAdd || tblRptMgrInvoicesList.CurrentMode == "copy") &&
        (!((tblRptMgrInvoicesList.IsCopy || tblRptMgrInvoicesList.IsAdd) && tblRptMgrInvoicesList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await tblRptMgrInvoicesList.Recordset.ReadAsync();
    tblRptMgrInvoicesList.RecordCount++;
    if (tblRptMgrInvoicesList.RecordCount >= tblRptMgrInvoicesList.StartRecord) {
        await tblRptMgrInvoicesList.SetupRow();
    <tr @Html.Raw(tblRptMgrInvoicesList.RowAttributes)>
    @* Render list options (body, left) *@
    @tblRptMgrInvoicesList.ListOptions.RenderBody("left", tblRptMgrInvoicesList.RowCount)
    @if (tblRptMgrInvoicesList.NationalID.Visible) { // tblRptMgrInvoicesList.NationalID.Visible (begin)
        <td data-name="NationalID" @Html.Raw(tblRptMgrInvoicesList.NationalID.CellAttributes)>
<span id="el@(tblRptMgrInvoicesList.RowIndex == "$rowindex$" ? "$rowindex$" : tblRptMgrInvoicesList.RowCount)_tblRptMgrInvoices_NationalID" class="el_tblRptMgrInvoices_NationalID">
<span @Html.Raw(tblRptMgrInvoicesList.NationalID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.NationalID.GetViewValue())</span>
</span>
</td>
    } @* tblRptMgrInvoicesList.NationalID.Visible (end) *@
    @if (tblRptMgrInvoicesList.Report_Date.Visible) { // tblRptMgrInvoicesList.Report_Date.Visible (begin)
        <td data-name="Report_Date" @Html.Raw(tblRptMgrInvoicesList.Report_Date.CellAttributes)>
<span id="el@(tblRptMgrInvoicesList.RowIndex == "$rowindex$" ? "$rowindex$" : tblRptMgrInvoicesList.RowCount)_tblRptMgrInvoices_Report_Date" class="el_tblRptMgrInvoices_Report_Date">
<span @Html.Raw(tblRptMgrInvoicesList.Report_Date.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.Report_Date.GetViewValue())</span>
</span>
</td>
    } @* tblRptMgrInvoicesList.Report_Date.Visible (end) *@
    @if (tblRptMgrInvoicesList.str_Username.Visible) { // tblRptMgrInvoicesList.str_Username.Visible (begin)
        <td data-name="str_Username" @Html.Raw(tblRptMgrInvoicesList.str_Username.CellAttributes)>
<span id="el@(tblRptMgrInvoicesList.RowIndex == "$rowindex$" ? "$rowindex$" : tblRptMgrInvoicesList.RowCount)_tblRptMgrInvoices_str_Username" class="el_tblRptMgrInvoices_str_Username">
<span @Html.Raw(tblRptMgrInvoicesList.str_Username.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.str_Username.GetViewValue())</span>
</span>
</td>
    } @* tblRptMgrInvoicesList.str_Username.Visible (end) *@
    @if (tblRptMgrInvoicesList.Report_Link.Visible) { // tblRptMgrInvoicesList.Report_Link.Visible (begin)
        <td data-name="Report_Link" @Html.Raw(tblRptMgrInvoicesList.Report_Link.CellAttributes)>
<span id="el@(tblRptMgrInvoicesList.RowIndex == "$rowindex$" ? "$rowindex$" : tblRptMgrInvoicesList.RowCount)_tblRptMgrInvoices_Report_Link" class="el_tblRptMgrInvoices_Report_Link">
<span @Html.Raw(tblRptMgrInvoicesList.Report_Link.ViewAttributes)>
@if (!EmptyString(tblRptMgrInvoicesList.Report_Link.GetViewValue()) && !Empty(tblRptMgrInvoicesList.Report_Link.LinkAttributes)) {
<a @Html.Raw(tblRptMgrInvoicesList.Report_Link.LinkAttributes)>@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())</a>
} else {
@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())
}
</span>
</span>
</td>
    } @* tblRptMgrInvoicesList.Report_Link.Visible (end) *@
    @* Render list options (body, right) *@
    @tblRptMgrInvoicesList.ListOptions.RenderBody("right", tblRptMgrInvoicesList.RowCount)
    </tr>
    } @* End if *@

    // Reset for template row
    if (SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$"))
        tblRptMgrInvoicesList.RowIndex = 0;

    // Reset inline add/copy row
    if ((tblRptMgrInvoicesList.IsCopy || tblRptMgrInvoicesList.IsAdd) && tblRptMgrInvoicesList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        tblRptMgrInvoicesList.RowIndex = 1;
} @* End While *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
</div><!-- /.ew-grid-middle-panel -->
@if (Empty(tblRptMgrInvoicesList.CurrentAction) && !tblRptMgrInvoicesList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ tblRptMgrInvoicesList.CloseRecordset(); }
</div><!-- /.ew-grid -->
