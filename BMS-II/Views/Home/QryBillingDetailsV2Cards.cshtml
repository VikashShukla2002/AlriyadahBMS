@if (!qryBillingDetailsV2List.IsExport()) {
<div>
@if (!qryBillingDetailsV2List.IsGridAdd && !(qryBillingDetailsV2List.IsGridEdit && qryBillingDetailsV2List.ModalGridEdit) && !qryBillingDetailsV2List.IsMultiEdit) {
@Html.Raw(qryBillingDetailsV2List.Pager.Render())
}
<div class="ew-list-other-options">
@qryBillingDetailsV2List.OtherOptions.RenderBody()
</div>
</div>
}
@if (qryBillingDetailsV2List.ModalGridAdd && qryBillingDetailsV2List.IsGridAdd || qryBillingDetailsV2List.ModalGridEdit && qryBillingDetailsV2List.IsGridEdit || qryBillingDetailsV2List.ModalMultiEdit && qryBillingDetailsV2List.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(qryBillingDetailsV2List.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { qryBillingDetails_v2: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(qryBillingDetailsV2List.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(qryBillingDetailsV2List.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(qryBillingDetailsV2List.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(qryBillingDetailsV2List.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<form name="@(qryBillingDetailsV2List.FormName)" id="@(qryBillingDetailsV2List.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(qryBillingDetailsV2List.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (qryBillingDetailsV2List.IsModal) {
<input type="hidden" name="modal" value="1">
}
@if (qryBillingDetailsV2List.CurrentMasterTable == "tblBillingInfo" && !Empty(qryBillingDetailsV2List.CurrentAction)) {
<input type="hidden" name="@(Config.TableShowMaster)" value="tblBillingInfo">
<input type="hidden" name="fk_NationalID" value="@(HtmlEncode(qryBillingDetailsV2List.NationalID.SessionValue))">
}
<div class="@(qryBillingDetailsV2List.GetMultiColumnRowClass())">
@if (qryBillingDetailsV2List.TotalRecords > 0 || qryBillingDetailsV2List.IsGridEdit || qryBillingDetailsV2List.IsMultiEdit) {
    await qryBillingDetailsV2List.SetupGrid();
    bool eof = qryBillingDetailsV2List.Recordset == null; // DN
while (qryBillingDetailsV2List.RecordCount < qryBillingDetailsV2List.StopRecord || SameString(qryBillingDetailsV2List.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(qryBillingDetailsV2List.RowIndex, "$rowindex$") &&
        (!qryBillingDetailsV2List.IsGridAdd || qryBillingDetailsV2List.CurrentMode == "copy") &&
        (!((qryBillingDetailsV2List.IsCopy || qryBillingDetailsV2List.IsAdd) && qryBillingDetailsV2List.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await qryBillingDetailsV2List.Recordset.ReadAsync();
    qryBillingDetailsV2List.RecordCount++;
    if (qryBillingDetailsV2List.RecordCount >= qryBillingDetailsV2List.StartRecord) {
        await qryBillingDetailsV2List.SetupRow();
<div class="@(qryBillingDetailsV2List.GetMultiColumnColClass())" @Html.Raw(qryBillingDetailsV2List.RowAttributes)>
<div class="@(qryBillingDetailsV2List.MultiColumnCardClass)">
    @if (qryBillingDetailsV2List.MultiColumnListOptionsPosition.StartsWith("top", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-header">
        <div class="ew-multi-column-list-option ew-@(qryBillingDetailsV2List.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    qryBillingDetailsV2List.ListOptions.Tag = "div";
    qryBillingDetailsV2List.ListOptions.RenderBody(qryBillingDetailsV2List.MultiColumnListOptionsPosition, qryBillingDetailsV2List.RowCount);
}
        </div><!-- /.ew-multi-column-list-option -->
    </div>
    }
    <div class="card-body">
    @if (qryBillingDetailsV2List.Payment_Number.Visible) { // qryBillingDetailsV2List.Payment_Number.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_Payment_Number">
            <div class="col col-sm-4 qryBillingDetails_v2_Payment_Number">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.Payment_Number))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.Payment_Number.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Payment_Number.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Payment_Number.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_Payment_Number">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.Payment_Number.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.Payment_Number.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Payment_Number.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Payment_Number.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.NationalID.Visible) { // qryBillingDetailsV2List.NationalID.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_NationalID">
            <div class="col col-sm-4 qryBillingDetails_v2_NationalID">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.NationalID))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.NationalID.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.NationalID.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.NationalID.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_NationalID">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.NationalID.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.NationalID.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.NationalID.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.NationalID.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.date_Paid.Visible) { // qryBillingDetailsV2List.date_Paid.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_date_Paid">
            <div class="col col-sm-4 qryBillingDetails_v2_date_Paid">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.date_Paid))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.date_Paid.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.date_Paid.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.date_Paid.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_date_Paid">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.date_Paid.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.date_Paid.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.date_Paid.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.date_Paid.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.Amount_Paid.Visible) { // qryBillingDetailsV2List.Amount_Paid.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_Amount_Paid">
            <div class="col col-sm-4 qryBillingDetails_v2_Amount_Paid">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.Amount_Paid))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.Amount_Paid.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Amount_Paid.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Amount_Paid.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_Amount_Paid">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.Amount_Paid.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.Amount_Paid.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Amount_Paid.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Amount_Paid.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.running_payments.Visible) { // qryBillingDetailsV2List.running_payments.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_running_payments">
            <div class="col col-sm-4 qryBillingDetails_v2_running_payments">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.running_payments))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.running_payments.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.running_payments.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.running_payments.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_running_payments">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.running_payments.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.running_payments.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.running_payments.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.running_payments.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.running_balance.Visible) { // qryBillingDetailsV2List.running_balance.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_running_balance">
            <div class="col col-sm-4 qryBillingDetails_v2_running_balance">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.running_balance))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.running_balance.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.running_balance.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.running_balance.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_running_balance">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.running_balance.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.running_balance.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.running_balance.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.running_balance.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.str_ApprovalCode.Visible) { // qryBillingDetailsV2List.str_ApprovalCode.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_str_ApprovalCode">
            <div class="col col-sm-4 qryBillingDetails_v2_str_ApprovalCode">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.str_ApprovalCode))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_str_ApprovalCode">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.str_ApprovalCode.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.Package_Name.Visible) { // qryBillingDetailsV2List.Package_Name.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_Package_Name">
            <div class="col col-sm-4 qryBillingDetails_v2_Package_Name">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.Package_Name))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.Package_Name.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Package_Name.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Package_Name.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_Package_Name">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.Package_Name.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.Package_Name.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.Package_Name.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.Package_Name.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (qryBillingDetailsV2List.int_Package_ID.Visible) { // qryBillingDetailsV2List.int_Package_ID.Visible (begin)
        if (qryBillingDetailsV2List.RowType == RowType.View) { // View record
        <div class="row qryBillingDetails_v2_int_Package_ID">
            <div class="col col-sm-4 qryBillingDetails_v2_int_Package_ID">@Html.Raw(qryBillingDetailsV2List.RenderFieldHeader(qryBillingDetailsV2List.int_Package_ID))</div>
            <div class="col col-sm-8"><div @Html.Raw(qryBillingDetailsV2List.int_Package_ID.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.int_Package_ID.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.int_Package_ID.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row qryBillingDetails_v2_int_Package_ID">
            <label class="@(qryBillingDetailsV2List.LeftColumnClass)">@Html.Raw(qryBillingDetailsV2List.int_Package_ID.Caption)</label>
            <div class="@(qryBillingDetailsV2List.RightColumnClass)"><div @Html.Raw(qryBillingDetailsV2List.int_Package_ID.CellAttributes)>
<span @Html.Raw(qryBillingDetailsV2List.int_Package_ID.ViewAttributes)>
@Html.Raw(qryBillingDetailsV2List.int_Package_ID.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    </div><!-- /.card-body -->
@if (!qryBillingDetailsV2List.IsExport()) {
    if (qryBillingDetailsV2List.MultiColumnListOptionsPosition.StartsWith("bottom", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-footer">
        <div class="ew-multi-column-list-option ew-@(qryBillingDetailsV2List.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    qryBillingDetailsV2List.ListOptions.Tag = "div";
}
@qryBillingDetailsV2List.ListOptions.RenderBody(qryBillingDetailsV2List.MultiColumnListOptionsPosition, qryBillingDetailsV2List.RowCount)
        </div><!-- /.ew-multi-column-list-option -->
    </div><!-- /.card-footer -->
    }
}
</div><!-- /.card -->
</div><!-- /.col-* -->
    } @* End if *@

    // Reset for template row
    if (SameString(qryBillingDetailsV2List.RowIndex, "$rowindex$"))
        qryBillingDetailsV2List.RowIndex = 0;

    // Reset inline add/copy row
    if ((qryBillingDetailsV2List.IsCopy || qryBillingDetailsV2List.IsAdd) && qryBillingDetailsV2List.RowIndex is int rowIndex2 && rowIndex2 == 0)
        qryBillingDetailsV2List.RowIndex = 1;
} @* End While *@
} @* qryBillingDetailsV2List.TotalRecords > 0 (end) *@
</div><!-- /.ew-multi-column-row -->
@if (Empty(qryBillingDetailsV2List.CurrentAction) && !qryBillingDetailsV2List.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ qryBillingDetailsV2List.CloseRecordset(); }
