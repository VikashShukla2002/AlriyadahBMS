@if (!qryClassroomCldrListList.IsExport()) {
<div>
@if (!qryClassroomCldrListList.IsGridAdd && !(qryClassroomCldrListList.IsGridEdit && qryClassroomCldrListList.ModalGridEdit) && !qryClassroomCldrListList.IsMultiEdit) {
@Html.Raw(qryClassroomCldrListList.Pager.Render())
}
<div class="ew-list-other-options">
@qryClassroomCldrListList.OtherOptions.RenderBody()
</div>
</div>
}
@if (qryClassroomCldrListList.ModalGridAdd && qryClassroomCldrListList.IsGridAdd || qryClassroomCldrListList.ModalGridEdit && qryClassroomCldrListList.IsGridEdit || qryClassroomCldrListList.ModalMultiEdit && qryClassroomCldrListList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(qryClassroomCldrListList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { qryClassroomCldrList: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(qryClassroomCldrListList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(qryClassroomCldrListList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(qryClassroomCldrListList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(qryClassroomCldrListList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<form name="@(qryClassroomCldrListList.FormName)" id="@(qryClassroomCldrListList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(qryClassroomCldrListList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (qryClassroomCldrListList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div class="@(qryClassroomCldrListList.GetMultiColumnRowClass())">
@if (qryClassroomCldrListList.TotalRecords > 0 || qryClassroomCldrListList.IsGridEdit || qryClassroomCldrListList.IsMultiEdit) {
    await qryClassroomCldrListList.SetupGrid();
    bool eof = qryClassroomCldrListList.Recordset == null; // DN
while (qryClassroomCldrListList.RecordCount < qryClassroomCldrListList.StopRecord || SameString(qryClassroomCldrListList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(qryClassroomCldrListList.RowIndex, "$rowindex$") &&
        (!qryClassroomCldrListList.IsGridAdd || qryClassroomCldrListList.CurrentMode == "copy") &&
        (!((qryClassroomCldrListList.IsCopy || qryClassroomCldrListList.IsAdd) && qryClassroomCldrListList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await qryClassroomCldrListList.Recordset.ReadAsync();
    qryClassroomCldrListList.RecordCount++;
    if (qryClassroomCldrListList.RecordCount >= qryClassroomCldrListList.StartRecord) {
        await qryClassroomCldrListList.SetupRow();
<div class="@(qryClassroomCldrListList.GetMultiColumnColClass())" @Html.Raw(qryClassroomCldrListList.RowAttributes)>
<div class="@(qryClassroomCldrListList.MultiColumnCardClass)">
    @if (qryClassroomCldrListList.MultiColumnListOptionsPosition.StartsWith("top", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-header">
        <div class="ew-multi-column-list-option ew-@(qryClassroomCldrListList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    qryClassroomCldrListList.ListOptions.Tag = "div";
    qryClassroomCldrListList.ListOptions.RenderBody(qryClassroomCldrListList.MultiColumnListOptionsPosition, qryClassroomCldrListList.RowCount);
}
        </div><!-- /.ew-multi-column-list-option -->
    </div>
    }
    </div><!-- /.card-body -->
@if (!qryClassroomCldrListList.IsExport()) {
    if (qryClassroomCldrListList.MultiColumnListOptionsPosition.StartsWith("bottom", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-footer">
        <div class="ew-multi-column-list-option ew-@(qryClassroomCldrListList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    qryClassroomCldrListList.ListOptions.Tag = "div";
}
@qryClassroomCldrListList.ListOptions.RenderBody(qryClassroomCldrListList.MultiColumnListOptionsPosition, qryClassroomCldrListList.RowCount)
        </div><!-- /.ew-multi-column-list-option -->
    </div><!-- /.card-footer -->
    }
}
</div><!-- /.card -->
</div><!-- /.col-* -->
    } @* End if *@

    // Reset for template row
    if (SameString(qryClassroomCldrListList.RowIndex, "$rowindex$"))
        qryClassroomCldrListList.RowIndex = 0;

    // Reset inline add/copy row
    if ((qryClassroomCldrListList.IsCopy || qryClassroomCldrListList.IsAdd) && qryClassroomCldrListList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        qryClassroomCldrListList.RowIndex = 1;
} @* End While *@
} @* qryClassroomCldrListList.TotalRecords > 0 (end) *@
</div><!-- /.ew-multi-column-row -->
@if (Empty(qryClassroomCldrListList.CurrentAction) && !qryClassroomCldrListList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ qryClassroomCldrListList.CloseRecordset(); }
