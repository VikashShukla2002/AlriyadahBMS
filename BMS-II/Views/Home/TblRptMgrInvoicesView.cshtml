@{
    // View
    View = this;

    // Check action result
    if (tblRptMgrInvoicesView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!tblRptMgrInvoicesView.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!tblRptMgrInvoicesView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!tblRptMgrInvoicesView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @tblRptMgrInvoicesView.ExportOptions.RenderBody()
    @tblRptMgrInvoicesView.OtherOptions.RenderBody()
</div>
}
@tblRptMgrInvoicesView.ShowPageHeader()
@tblRptMgrInvoicesView.ShowMessages()
<main class="view">
<form name="ftblRptMgrInvoicesview" id="ftblRptMgrInvoicesview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!tblRptMgrInvoicesView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(tblRptMgrInvoicesView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tblRptMgrInvoices: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var ftblRptMgrInvoicesview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("ftblRptMgrInvoicesview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(tblRptMgrInvoicesView.IsModal)">
<table class="@(tblRptMgrInvoicesView.TableClass)">
@if (tblRptMgrInvoicesView.RptMgr_ID.Visible) { // tblRptMgrInvoicesView.RptMgr_ID.Visible (begin)
    <tr id="r_RptMgr_ID" @Html.Raw(tblRptMgrInvoicesView.RptMgr_ID.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_RptMgr_ID">@Html.Raw(tblRptMgrInvoicesView.RptMgr_ID.Caption)</span></td>
        <td data-name="RptMgr_ID" @Html.Raw(tblRptMgrInvoicesView.RptMgr_ID.CellAttributes)>
<span id="el_tblRptMgrInvoices_RptMgr_ID">
<span @Html.Raw(tblRptMgrInvoicesView.RptMgr_ID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.RptMgr_ID.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.RptMgr_ID.Visible (end) *@
@if (tblRptMgrInvoicesView.NationalID.Visible) { // tblRptMgrInvoicesView.NationalID.Visible (begin)
    <tr id="r_NationalID" @Html.Raw(tblRptMgrInvoicesView.NationalID.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_NationalID">@Html.Raw(tblRptMgrInvoicesView.NationalID.Caption)</span></td>
        <td data-name="NationalID" @Html.Raw(tblRptMgrInvoicesView.NationalID.CellAttributes)>
<span id="el_tblRptMgrInvoices_NationalID">
<span @Html.Raw(tblRptMgrInvoicesView.NationalID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.NationalID.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.NationalID.Visible (end) *@
@if (tblRptMgrInvoicesView.Program_ID.Visible) { // tblRptMgrInvoicesView.Program_ID.Visible (begin)
    <tr id="r_Program_ID" @Html.Raw(tblRptMgrInvoicesView.Program_ID.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_Program_ID">@Html.Raw(tblRptMgrInvoicesView.Program_ID.Caption)</span></td>
        <td data-name="Program_ID" @Html.Raw(tblRptMgrInvoicesView.Program_ID.CellAttributes)>
<span id="el_tblRptMgrInvoices_Program_ID">
<span @Html.Raw(tblRptMgrInvoicesView.Program_ID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.Program_ID.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.Program_ID.Visible (end) *@
@if (tblRptMgrInvoicesView.Report_Date.Visible) { // tblRptMgrInvoicesView.Report_Date.Visible (begin)
    <tr id="r_Report_Date" @Html.Raw(tblRptMgrInvoicesView.Report_Date.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_Report_Date">@Html.Raw(tblRptMgrInvoicesView.Report_Date.Caption)</span></td>
        <td data-name="Report_Date" @Html.Raw(tblRptMgrInvoicesView.Report_Date.CellAttributes)>
<span id="el_tblRptMgrInvoices_Report_Date">
<span @Html.Raw(tblRptMgrInvoicesView.Report_Date.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.Report_Date.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.Report_Date.Visible (end) *@
@if (tblRptMgrInvoicesView.str_Username.Visible) { // tblRptMgrInvoicesView.str_Username.Visible (begin)
    <tr id="r_str_Username" @Html.Raw(tblRptMgrInvoicesView.str_Username.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_str_Username">@Html.Raw(tblRptMgrInvoicesView.str_Username.Caption)</span></td>
        <td data-name="str_Username" @Html.Raw(tblRptMgrInvoicesView.str_Username.CellAttributes)>
<span id="el_tblRptMgrInvoices_str_Username">
<span @Html.Raw(tblRptMgrInvoicesView.str_Username.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.str_Username.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.str_Username.Visible (end) *@
@if (tblRptMgrInvoicesView.Report_Link.Visible) { // tblRptMgrInvoicesView.Report_Link.Visible (begin)
    <tr id="r_Report_Link" @Html.Raw(tblRptMgrInvoicesView.Report_Link.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_Report_Link">@Html.Raw(tblRptMgrInvoicesView.Report_Link.Caption)</span></td>
        <td data-name="Report_Link" @Html.Raw(tblRptMgrInvoicesView.Report_Link.CellAttributes)>
<span id="el_tblRptMgrInvoices_Report_Link">
<span @Html.Raw(tblRptMgrInvoicesView.Report_Link.ViewAttributes)>
@if (!EmptyString(tblRptMgrInvoicesView.Report_Link.GetViewValue()) && !Empty(tblRptMgrInvoicesView.Report_Link.LinkAttributes)) {
<a @Html.Raw(tblRptMgrInvoicesView.Report_Link.LinkAttributes)>@Html.Raw(tblRptMgrInvoicesView.Report_Link.GetViewValue())</a>
} else {
@Html.Raw(tblRptMgrInvoicesView.Report_Link.GetViewValue())
}
</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.Report_Link.Visible (end) *@
@if (tblRptMgrInvoicesView.Report.Visible) { // tblRptMgrInvoicesView.Report.Visible (begin)
    <tr id="r_Report" @Html.Raw(tblRptMgrInvoicesView.Report.RowAttributes)>
        <td class="@(tblRptMgrInvoicesView.TableLeftColumnClass)"><span id="elh_tblRptMgrInvoices_Report">@Html.Raw(tblRptMgrInvoicesView.Report.Caption)</span></td>
        <td data-name="Report" @Html.Raw(tblRptMgrInvoicesView.Report.CellAttributes)>
<span id="el_tblRptMgrInvoices_Report">
<span @Html.Raw(tblRptMgrInvoicesView.Report.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesView.Report.GetViewValue())</span>
</span></td>
    </tr>
} @* tblRptMgrInvoicesView.Report.Visible (end) *@
</table>
@{ tblRptMgrInvoicesView.CloseRecordset(); }
</form>
</main>
@tblRptMgrInvoicesView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!tblRptMgrInvoicesView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
