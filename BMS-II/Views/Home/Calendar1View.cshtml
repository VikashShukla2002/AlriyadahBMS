@{
    // View
    View = this;

    // Check action result
    if (calendar1View.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (DashboardReport) {
        if (!calendar1View.Visible) { // Not visible, return
            return;
        }
        Layout = ""; // No layout
    } else {
        if (!calendar1View.UseLayout) // UseLayout = false // DN
            Layout = "";
        else
            Layout = "_Layout";
    }

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!calendar1View.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!calendar1View.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @calendar1View.ExportOptions.RenderBody()
    @calendar1View.OtherOptions.RenderBody()
</div>
}
@calendar1View.ShowPageHeader()
@calendar1View.ShowMessages()
<main class="view">
<form name="fCalendar1view" id="fCalendar1view" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!calendar1View.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(calendar1View.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Calendar1: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fCalendar1view;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCalendar1view")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(calendar1View.IsModal)">
<table class="@(calendar1View.TableClass)">
@if (calendar1View.Id.Visible) { // calendar1View.Id.Visible (begin)
    <tr id="r_Id" @Html.Raw(calendar1View.Id.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_Id">@Html.Raw(calendar1View.Id.Caption)</span></td>
        <td data-name="Id" @Html.Raw(calendar1View.Id.CellAttributes)>
<span id="el_Calendar1_Id">
<span @Html.Raw(calendar1View.Id.ViewAttributes)>
@Html.Raw(calendar1View.Id.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.Id.Visible (end) *@
@if (calendar1View._Title.Visible) { // calendar1View._Title.Visible (begin)
    <tr id="r__Title" @Html.Raw(calendar1View._Title.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1__Title">@Html.Raw(calendar1View._Title.Caption)</span></td>
        <td data-name="_Title" @Html.Raw(calendar1View._Title.CellAttributes)>
<span id="el_Calendar1__Title">
<span @Html.Raw(calendar1View._Title.ViewAttributes)>
@Html.Raw(calendar1View._Title.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View._Title.Visible (end) *@
@if (calendar1View.Start.Visible) { // calendar1View.Start.Visible (begin)
    <tr id="r_Start" @Html.Raw(calendar1View.Start.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_Start">@Html.Raw(calendar1View.Start.Caption)</span></td>
        <td data-name="Start" @Html.Raw(calendar1View.Start.CellAttributes)>
<span id="el_Calendar1_Start">
<span @Html.Raw(calendar1View.Start.ViewAttributes)>
@Html.Raw(calendar1View.Start.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.Start.Visible (end) *@
@if (calendar1View.End.Visible) { // calendar1View.End.Visible (begin)
    <tr id="r_End" @Html.Raw(calendar1View.End.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_End">@Html.Raw(calendar1View.End.Caption)</span></td>
        <td data-name="End" @Html.Raw(calendar1View.End.CellAttributes)>
<span id="el_Calendar1_End">
<span @Html.Raw(calendar1View.End.ViewAttributes)>
@Html.Raw(calendar1View.End.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.End.Visible (end) *@
@if (calendar1View.AllDay.Visible) { // calendar1View.AllDay.Visible (begin)
    <tr id="r_AllDay" @Html.Raw(calendar1View.AllDay.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_AllDay">@Html.Raw(calendar1View.AllDay.Caption)</span></td>
        <td data-name="AllDay" @Html.Raw(calendar1View.AllDay.CellAttributes)>
<span id="el_Calendar1_AllDay">
<span @Html.Raw(calendar1View.AllDay.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_AllDay_@(calendar1View.RowCount)" class="form-check-input" value="@(calendar1View.AllDay.GetViewValue())" disabled checked="@(ConvertToBool(calendar1View.AllDay.CurrentValue))">
    <label class="form-check-label" for="x_AllDay_@(calendar1View.RowCount)"></label>
</div></span>
</span></td>
    </tr>
} @* calendar1View.AllDay.Visible (end) *@
@if (calendar1View.Description.Visible) { // calendar1View.Description.Visible (begin)
    <tr id="r_Description" @Html.Raw(calendar1View.Description.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_Description">@Html.Raw(calendar1View.Description.Caption)</span></td>
        <td data-name="Description" @Html.Raw(calendar1View.Description.CellAttributes)>
<span id="el_Calendar1_Description">
<span @Html.Raw(calendar1View.Description.ViewAttributes)>
@Html.Raw(calendar1View.Description.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.Description.Visible (end) *@
@if (calendar1View._Url.Visible) { // calendar1View._Url.Visible (begin)
    <tr id="r__Url" @Html.Raw(calendar1View._Url.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1__Url">@Html.Raw(calendar1View._Url.Caption)</span></td>
        <td data-name="_Url" @Html.Raw(calendar1View._Url.CellAttributes)>
<span id="el_Calendar1__Url">
<span @Html.Raw(calendar1View._Url.ViewAttributes)>
@Html.Raw(calendar1View._Url.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View._Url.Visible (end) *@
@if (calendar1View.ClassNames.Visible) { // calendar1View.ClassNames.Visible (begin)
    <tr id="r_ClassNames" @Html.Raw(calendar1View.ClassNames.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_ClassNames">@Html.Raw(calendar1View.ClassNames.Caption)</span></td>
        <td data-name="ClassNames" @Html.Raw(calendar1View.ClassNames.CellAttributes)>
<span id="el_Calendar1_ClassNames">
<span @Html.Raw(calendar1View.ClassNames.ViewAttributes)>
@Html.Raw(calendar1View.ClassNames.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.ClassNames.Visible (end) *@
@if (calendar1View.Display.Visible) { // calendar1View.Display.Visible (begin)
    <tr id="r_Display" @Html.Raw(calendar1View.Display.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_Display">@Html.Raw(calendar1View.Display.Caption)</span></td>
        <td data-name="Display" @Html.Raw(calendar1View.Display.CellAttributes)>
<span id="el_Calendar1_Display">
<span @Html.Raw(calendar1View.Display.ViewAttributes)>
@Html.Raw(calendar1View.Display.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.Display.Visible (end) *@
@if (calendar1View.BackgroundColor.Visible) { // calendar1View.BackgroundColor.Visible (begin)
    <tr id="r_BackgroundColor" @Html.Raw(calendar1View.BackgroundColor.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_BackgroundColor">@Html.Raw(calendar1View.BackgroundColor.Caption)</span></td>
        <td data-name="BackgroundColor" @Html.Raw(calendar1View.BackgroundColor.CellAttributes)>
<span id="el_Calendar1_BackgroundColor">
<span @Html.Raw(calendar1View.BackgroundColor.ViewAttributes)>
@Html.Raw(calendar1View.BackgroundColor.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.BackgroundColor.Visible (end) *@
@if (calendar1View.str_Username.Visible) { // calendar1View.str_Username.Visible (begin)
    <tr id="r_str_Username" @Html.Raw(calendar1View.str_Username.RowAttributes)>
        <td class="@(calendar1View.TableLeftColumnClass)"><span id="elh_Calendar1_str_Username">@Html.Raw(calendar1View.str_Username.Caption)</span></td>
        <td data-name="str_Username" @Html.Raw(calendar1View.str_Username.CellAttributes)>
<span id="el_Calendar1_str_Username">
<span @Html.Raw(calendar1View.str_Username.ViewAttributes)>
@Html.Raw(calendar1View.str_Username.GetViewValue())</span>
</span></td>
    </tr>
} @* calendar1View.str_Username.Visible (end) *@
</table>
@{ calendar1View.CloseRecordset(); }
</form>
</main>
@calendar1View.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!calendar1View.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
