@if (!dshbdRegisteredList.IsExport()) {
<div>
@if (!dshbdRegisteredList.IsGridAdd && !(dshbdRegisteredList.IsGridEdit && dshbdRegisteredList.ModalGridEdit) && !dshbdRegisteredList.IsMultiEdit) {
@Html.Raw(dshbdRegisteredList.Pager.Render())
}
<div class="ew-list-other-options">
@dshbdRegisteredList.OtherOptions.RenderBody()
</div>
</div>
}
@if (dshbdRegisteredList.ModalGridAdd && dshbdRegisteredList.IsGridAdd || dshbdRegisteredList.ModalGridEdit && dshbdRegisteredList.IsGridEdit || dshbdRegisteredList.ModalMultiEdit && dshbdRegisteredList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(dshbdRegisteredList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { dshbdRegistered: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(dshbdRegisteredList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(dshbdRegisteredList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(dshbdRegisteredList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(dshbdRegisteredList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<form name="@(dshbdRegisteredList.FormName)" id="@(dshbdRegisteredList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(dshbdRegisteredList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (dshbdRegisteredList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div class="@(dshbdRegisteredList.GetMultiColumnRowClass())">
@if (dshbdRegisteredList.TotalRecords > 0 || dshbdRegisteredList.IsGridEdit || dshbdRegisteredList.IsMultiEdit) {
    await dshbdRegisteredList.SetupGrid();
    bool eof = dshbdRegisteredList.Recordset == null; // DN
while (dshbdRegisteredList.RecordCount < dshbdRegisteredList.StopRecord || SameString(dshbdRegisteredList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(dshbdRegisteredList.RowIndex, "$rowindex$") &&
        (!dshbdRegisteredList.IsGridAdd || dshbdRegisteredList.CurrentMode == "copy") &&
        (!((dshbdRegisteredList.IsCopy || dshbdRegisteredList.IsAdd) && dshbdRegisteredList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await dshbdRegisteredList.Recordset.ReadAsync();
    dshbdRegisteredList.RecordCount++;
    if (dshbdRegisteredList.RecordCount >= dshbdRegisteredList.StartRecord) {
        await dshbdRegisteredList.SetupRow();
<div class="@(dshbdRegisteredList.GetMultiColumnColClass())" @Html.Raw(dshbdRegisteredList.RowAttributes)>
<div class="@(dshbdRegisteredList.MultiColumnCardClass)">
    @if (dshbdRegisteredList.MultiColumnListOptionsPosition.StartsWith("top", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-header">
        <div class="ew-multi-column-list-option ew-@(dshbdRegisteredList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    dshbdRegisteredList.ListOptions.Tag = "div";
    dshbdRegisteredList.ListOptions.RenderBody(dshbdRegisteredList.MultiColumnListOptionsPosition, dshbdRegisteredList.RowCount);
}
        </div><!-- /.ew-multi-column-list-option -->
    </div>
    }
    <div class="card-body">
    @if (dshbdRegisteredList.str_Full_Name.Visible) { // dshbdRegisteredList.str_Full_Name.Visible (begin)
        if (dshbdRegisteredList.RowType == RowType.View) { // View record
        <div class="row dshbdRegistered_str_Full_Name">
            <div class="col col-sm-4 dshbdRegistered_str_Full_Name">@Html.Raw(dshbdRegisteredList.RenderFieldHeader(dshbdRegisteredList.str_Full_Name))</div>
            <div class="col col-sm-8"><div @Html.Raw(dshbdRegisteredList.str_Full_Name.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.str_Full_Name.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.str_Full_Name.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row dshbdRegistered_str_Full_Name">
            <label class="@(dshbdRegisteredList.LeftColumnClass)">@Html.Raw(dshbdRegisteredList.str_Full_Name.Caption)</label>
            <div class="@(dshbdRegisteredList.RightColumnClass)"><div @Html.Raw(dshbdRegisteredList.str_Full_Name.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.str_Full_Name.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.str_Full_Name.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (dshbdRegisteredList.RegistrationDate.Visible) { // dshbdRegisteredList.RegistrationDate.Visible (begin)
        if (dshbdRegisteredList.RowType == RowType.View) { // View record
        <div class="row dshbdRegistered_RegistrationDate">
            <div class="col col-sm-4 dshbdRegistered_RegistrationDate">@Html.Raw(dshbdRegisteredList.RenderFieldHeader(dshbdRegisteredList.RegistrationDate))</div>
            <div class="col col-sm-8"><div @Html.Raw(dshbdRegisteredList.RegistrationDate.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.RegistrationDate.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.RegistrationDate.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row dshbdRegistered_RegistrationDate">
            <label class="@(dshbdRegisteredList.LeftColumnClass)">@Html.Raw(dshbdRegisteredList.RegistrationDate.Caption)</label>
            <div class="@(dshbdRegisteredList.RightColumnClass)"><div @Html.Raw(dshbdRegisteredList.RegistrationDate.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.RegistrationDate.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.RegistrationDate.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (dshbdRegisteredList.NationalID.Visible) { // dshbdRegisteredList.NationalID.Visible (begin)
        if (dshbdRegisteredList.RowType == RowType.View) { // View record
        <div class="row dshbdRegistered_NationalID">
            <div class="col col-sm-4 dshbdRegistered_NationalID">@Html.Raw(dshbdRegisteredList.RenderFieldHeader(dshbdRegisteredList.NationalID))</div>
            <div class="col col-sm-8"><div @Html.Raw(dshbdRegisteredList.NationalID.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.NationalID.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.NationalID.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row dshbdRegistered_NationalID">
            <label class="@(dshbdRegisteredList.LeftColumnClass)">@Html.Raw(dshbdRegisteredList.NationalID.Caption)</label>
            <div class="@(dshbdRegisteredList.RightColumnClass)"><div @Html.Raw(dshbdRegisteredList.NationalID.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.NationalID.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.NationalID.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (dshbdRegisteredList.str_Username.Visible) { // dshbdRegisteredList.str_Username.Visible (begin)
        if (dshbdRegisteredList.RowType == RowType.View) { // View record
        <div class="row dshbdRegistered_str_Username">
            <div class="col col-sm-4 dshbdRegistered_str_Username">@Html.Raw(dshbdRegisteredList.RenderFieldHeader(dshbdRegisteredList.str_Username))</div>
            <div class="col col-sm-8"><div @Html.Raw(dshbdRegisteredList.str_Username.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.str_Username.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.str_Username.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row dshbdRegistered_str_Username">
            <label class="@(dshbdRegisteredList.LeftColumnClass)">@Html.Raw(dshbdRegisteredList.str_Username.Caption)</label>
            <div class="@(dshbdRegisteredList.RightColumnClass)"><div @Html.Raw(dshbdRegisteredList.str_Username.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.str_Username.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.str_Username.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (dshbdRegisteredList.DrivingExperience.Visible) { // dshbdRegisteredList.DrivingExperience.Visible (begin)
        if (dshbdRegisteredList.RowType == RowType.View) { // View record
        <div class="row dshbdRegistered_DrivingExperience">
            <div class="col col-sm-4 dshbdRegistered_DrivingExperience">@Html.Raw(dshbdRegisteredList.RenderFieldHeader(dshbdRegisteredList.DrivingExperience))</div>
            <div class="col col-sm-8"><div @Html.Raw(dshbdRegisteredList.DrivingExperience.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.DrivingExperience.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.DrivingExperience.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row dshbdRegistered_DrivingExperience">
            <label class="@(dshbdRegisteredList.LeftColumnClass)">@Html.Raw(dshbdRegisteredList.DrivingExperience.Caption)</label>
            <div class="@(dshbdRegisteredList.RightColumnClass)"><div @Html.Raw(dshbdRegisteredList.DrivingExperience.CellAttributes)>
<span @Html.Raw(dshbdRegisteredList.DrivingExperience.ViewAttributes)>
@Html.Raw(dshbdRegisteredList.DrivingExperience.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    </div><!-- /.card-body -->
@if (!dshbdRegisteredList.IsExport()) {
    if (dshbdRegisteredList.MultiColumnListOptionsPosition.StartsWith("bottom", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-footer">
        <div class="ew-multi-column-list-option ew-@(dshbdRegisteredList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    dshbdRegisteredList.ListOptions.Tag = "div";
}
@dshbdRegisteredList.ListOptions.RenderBody(dshbdRegisteredList.MultiColumnListOptionsPosition, dshbdRegisteredList.RowCount)
        </div><!-- /.ew-multi-column-list-option -->
    </div><!-- /.card-footer -->
    }
}
</div><!-- /.card -->
</div><!-- /.col-* -->
    } @* End if *@

    // Reset for template row
    if (SameString(dshbdRegisteredList.RowIndex, "$rowindex$"))
        dshbdRegisteredList.RowIndex = 0;

    // Reset inline add/copy row
    if ((dshbdRegisteredList.IsCopy || dshbdRegisteredList.IsAdd) && dshbdRegisteredList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        dshbdRegisteredList.RowIndex = 1;
} @* End While *@
} @* dshbdRegisteredList.TotalRecords > 0 (end) *@
</div><!-- /.ew-multi-column-row -->
@if (Empty(dshbdRegisteredList.CurrentAction) && !dshbdRegisteredList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ dshbdRegisteredList.CloseRecordset(); }
