@{
    // View
    View = this;

    // Check action result
    if (appointmentCalendarView.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (DashboardReport) {
        if (!appointmentCalendarView.Visible) { // Not visible, return
            return;
        }
        Layout = ""; // No layout
    } else {
        if (!appointmentCalendarView.UseLayout) // UseLayout = false // DN
            Layout = "";
        else
            Layout = "_Layout";
    }

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!appointmentCalendarView.IsExport()) {
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!appointmentCalendarView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @appointmentCalendarView.ExportOptions.RenderBody()
    @appointmentCalendarView.OtherOptions.RenderBody()
</div>
}
@appointmentCalendarView.ShowPageHeader()
@appointmentCalendarView.ShowMessages()
<main class="view">
<form name="fAppointment_Calendarview" id="fAppointment_Calendarview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!appointmentCalendarView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(appointmentCalendarView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Appointment_Calendar: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fAppointment_Calendarview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fAppointment_Calendarview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
}
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(appointmentCalendarView.IsModal)">
<table class="@(appointmentCalendarView.TableClass)">
@if (appointmentCalendarView.Id.Visible) { // appointmentCalendarView.Id.Visible (begin)
    <tr id="r_Id" @Html.Raw(appointmentCalendarView.Id.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_Id">@Html.Raw(appointmentCalendarView.Id.Caption)</span></td>
        <td data-name="Id" @Html.Raw(appointmentCalendarView.Id.CellAttributes)>
<span id="el_Appointment_Calendar_Id">
<span @Html.Raw(appointmentCalendarView.Id.ViewAttributes)>
@Html.Raw(appointmentCalendarView.Id.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.Id.Visible (end) *@
@if (appointmentCalendarView.int_Enrollement_Id.Visible) { // appointmentCalendarView.int_Enrollement_Id.Visible (begin)
    <tr id="r_int_Enrollement_Id" @Html.Raw(appointmentCalendarView.int_Enrollement_Id.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_int_Enrollement_Id">@Html.Raw(appointmentCalendarView.int_Enrollement_Id.Caption)</span></td>
        <td data-name="int_Enrollement_Id" @Html.Raw(appointmentCalendarView.int_Enrollement_Id.CellAttributes)>
<span id="el_Appointment_Calendar_int_Enrollement_Id">
<span @Html.Raw(appointmentCalendarView.int_Enrollement_Id.ViewAttributes)>
@Html.Raw(appointmentCalendarView.int_Enrollement_Id.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.int_Enrollement_Id.Visible (end) *@
@if (appointmentCalendarView.int_PackageID.Visible) { // appointmentCalendarView.int_PackageID.Visible (begin)
    <tr id="r_int_PackageID" @Html.Raw(appointmentCalendarView.int_PackageID.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_int_PackageID">@Html.Raw(appointmentCalendarView.int_PackageID.Caption)</span></td>
        <td data-name="int_PackageID" @Html.Raw(appointmentCalendarView.int_PackageID.CellAttributes)>
<span id="el_Appointment_Calendar_int_PackageID">
<span @Html.Raw(appointmentCalendarView.int_PackageID.ViewAttributes)>
@Html.Raw(appointmentCalendarView.int_PackageID.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.int_PackageID.Visible (end) *@
@if (appointmentCalendarView._Title.Visible) { // appointmentCalendarView._Title.Visible (begin)
    <tr id="r__Title" @Html.Raw(appointmentCalendarView._Title.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar__Title">@Html.Raw(appointmentCalendarView._Title.Caption)</span></td>
        <td data-name="_Title" @Html.Raw(appointmentCalendarView._Title.CellAttributes)>
<span id="el_Appointment_Calendar__Title">
<span @Html.Raw(appointmentCalendarView._Title.ViewAttributes)>
@Html.Raw(appointmentCalendarView._Title.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView._Title.Visible (end) *@
@if (appointmentCalendarView.Start.Visible) { // appointmentCalendarView.Start.Visible (begin)
    <tr id="r_Start" @Html.Raw(appointmentCalendarView.Start.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_Start">@Html.Raw(appointmentCalendarView.Start.Caption)</span></td>
        <td data-name="Start" @Html.Raw(appointmentCalendarView.Start.CellAttributes)>
<span id="el_Appointment_Calendar_Start">
<span @Html.Raw(appointmentCalendarView.Start.ViewAttributes)>
@Html.Raw(appointmentCalendarView.Start.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.Start.Visible (end) *@
@if (appointmentCalendarView.End.Visible) { // appointmentCalendarView.End.Visible (begin)
    <tr id="r_End" @Html.Raw(appointmentCalendarView.End.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_End">@Html.Raw(appointmentCalendarView.End.Caption)</span></td>
        <td data-name="End" @Html.Raw(appointmentCalendarView.End.CellAttributes)>
<span id="el_Appointment_Calendar_End">
<span @Html.Raw(appointmentCalendarView.End.ViewAttributes)>
@Html.Raw(appointmentCalendarView.End.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.End.Visible (end) *@
@if (appointmentCalendarView.AllDay.Visible) { // appointmentCalendarView.AllDay.Visible (begin)
    <tr id="r_AllDay" @Html.Raw(appointmentCalendarView.AllDay.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_AllDay">@Html.Raw(appointmentCalendarView.AllDay.Caption)</span></td>
        <td data-name="AllDay" @Html.Raw(appointmentCalendarView.AllDay.CellAttributes)>
<span id="el_Appointment_Calendar_AllDay">
<span @Html.Raw(appointmentCalendarView.AllDay.ViewAttributes)>
<div class="form-check d-inline-block">
    <input type="checkbox" id="x_AllDay_@(appointmentCalendarView.RowCount)" class="form-check-input" value="@(appointmentCalendarView.AllDay.GetViewValue())" disabled checked="@(ConvertToBool(appointmentCalendarView.AllDay.CurrentValue))">
    <label class="form-check-label" for="x_AllDay_@(appointmentCalendarView.RowCount)"></label>
</div></span>
</span></td>
    </tr>
} @* appointmentCalendarView.AllDay.Visible (end) *@
@if (appointmentCalendarView.Description.Visible) { // appointmentCalendarView.Description.Visible (begin)
    <tr id="r_Description" @Html.Raw(appointmentCalendarView.Description.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_Description">@Html.Raw(appointmentCalendarView.Description.Caption)</span></td>
        <td data-name="Description" @Html.Raw(appointmentCalendarView.Description.CellAttributes)>
<span id="el_Appointment_Calendar_Description">
<span @Html.Raw(appointmentCalendarView.Description.ViewAttributes)>
@Html.Raw(appointmentCalendarView.Description.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.Description.Visible (end) *@
@if (appointmentCalendarView._Url.Visible) { // appointmentCalendarView._Url.Visible (begin)
    <tr id="r__Url" @Html.Raw(appointmentCalendarView._Url.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar__Url">@Html.Raw(appointmentCalendarView._Url.Caption)</span></td>
        <td data-name="_Url" @Html.Raw(appointmentCalendarView._Url.CellAttributes)>
<span id="el_Appointment_Calendar__Url">
<span @Html.Raw(appointmentCalendarView._Url.ViewAttributes)>
@Html.Raw(appointmentCalendarView._Url.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView._Url.Visible (end) *@
@if (appointmentCalendarView.Display.Visible) { // appointmentCalendarView.Display.Visible (begin)
    <tr id="r_Display" @Html.Raw(appointmentCalendarView.Display.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_Display">@Html.Raw(appointmentCalendarView.Display.Caption)</span></td>
        <td data-name="Display" @Html.Raw(appointmentCalendarView.Display.CellAttributes)>
<span id="el_Appointment_Calendar_Display">
<span @Html.Raw(appointmentCalendarView.Display.ViewAttributes)>
@Html.Raw(appointmentCalendarView.Display.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.Display.Visible (end) *@
@if (appointmentCalendarView.BackgroundColor.Visible) { // appointmentCalendarView.BackgroundColor.Visible (begin)
    <tr id="r_BackgroundColor" @Html.Raw(appointmentCalendarView.BackgroundColor.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_BackgroundColor">@Html.Raw(appointmentCalendarView.BackgroundColor.Caption)</span></td>
        <td data-name="BackgroundColor" @Html.Raw(appointmentCalendarView.BackgroundColor.CellAttributes)>
<span id="el_Appointment_Calendar_BackgroundColor">
<span @Html.Raw(appointmentCalendarView.BackgroundColor.ViewAttributes)>
@Html.Raw(appointmentCalendarView.BackgroundColor.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.BackgroundColor.Visible (end) *@
@if (appointmentCalendarView.CRSS_ID.Visible) { // appointmentCalendarView.CRSS_ID.Visible (begin)
    <tr id="r_CRSS_ID" @Html.Raw(appointmentCalendarView.CRSS_ID.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_CRSS_ID">@Html.Raw(appointmentCalendarView.CRSS_ID.Caption)</span></td>
        <td data-name="CRSS_ID" @Html.Raw(appointmentCalendarView.CRSS_ID.CellAttributes)>
<span id="el_Appointment_Calendar_CRSS_ID">
<span @Html.Raw(appointmentCalendarView.CRSS_ID.ViewAttributes)>
@Html.Raw(appointmentCalendarView.CRSS_ID.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.CRSS_ID.Visible (end) *@
@if (appointmentCalendarView.str_AppointmentType.Visible) { // appointmentCalendarView.str_AppointmentType.Visible (begin)
    <tr id="r_str_AppointmentType" @Html.Raw(appointmentCalendarView.str_AppointmentType.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_str_AppointmentType">@Html.Raw(appointmentCalendarView.str_AppointmentType.Caption)</span></td>
        <td data-name="str_AppointmentType" @Html.Raw(appointmentCalendarView.str_AppointmentType.CellAttributes)>
<span id="el_Appointment_Calendar_str_AppointmentType">
<span @Html.Raw(appointmentCalendarView.str_AppointmentType.ViewAttributes)>
@Html.Raw(appointmentCalendarView.str_AppointmentType.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.str_AppointmentType.Visible (end) *@
@if (appointmentCalendarView.str_AppointmentStatus.Visible) { // appointmentCalendarView.str_AppointmentStatus.Visible (begin)
    <tr id="r_str_AppointmentStatus" @Html.Raw(appointmentCalendarView.str_AppointmentStatus.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_str_AppointmentStatus">@Html.Raw(appointmentCalendarView.str_AppointmentStatus.Caption)</span></td>
        <td data-name="str_AppointmentStatus" @Html.Raw(appointmentCalendarView.str_AppointmentStatus.CellAttributes)>
<span id="el_Appointment_Calendar_str_AppointmentStatus">
<span @Html.Raw(appointmentCalendarView.str_AppointmentStatus.ViewAttributes)>
@Html.Raw(appointmentCalendarView.str_AppointmentStatus.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.str_AppointmentStatus.Visible (end) *@
@if (appointmentCalendarView.str_Username.Visible) { // appointmentCalendarView.str_Username.Visible (begin)
    <tr id="r_str_Username" @Html.Raw(appointmentCalendarView.str_Username.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_str_Username">@Html.Raw(appointmentCalendarView.str_Username.Caption)</span></td>
        <td data-name="str_Username" @Html.Raw(appointmentCalendarView.str_Username.CellAttributes)>
<span id="el_Appointment_Calendar_str_Username">
<span @Html.Raw(appointmentCalendarView.str_Username.ViewAttributes)>
@Html.Raw(appointmentCalendarView.str_Username.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.str_Username.Visible (end) *@
@if (appointmentCalendarView.str_CRSS_IDUSER.Visible) { // appointmentCalendarView.str_CRSS_IDUSER.Visible (begin)
    <tr id="r_str_CRSS_IDUSER" @Html.Raw(appointmentCalendarView.str_CRSS_IDUSER.RowAttributes)>
        <td class="@(appointmentCalendarView.TableLeftColumnClass)"><span id="elh_Appointment_Calendar_str_CRSS_IDUSER">@Html.Raw(appointmentCalendarView.str_CRSS_IDUSER.Caption)</span></td>
        <td data-name="str_CRSS_IDUSER" @Html.Raw(appointmentCalendarView.str_CRSS_IDUSER.CellAttributes)>
<span id="el_Appointment_Calendar_str_CRSS_IDUSER">
<span @Html.Raw(appointmentCalendarView.str_CRSS_IDUSER.ViewAttributes)>
@Html.Raw(appointmentCalendarView.str_CRSS_IDUSER.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentCalendarView.str_CRSS_IDUSER.Visible (end) *@
</table>
@{ appointmentCalendarView.CloseRecordset(); }
</form>
</main>
@appointmentCalendarView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!appointmentCalendarView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
