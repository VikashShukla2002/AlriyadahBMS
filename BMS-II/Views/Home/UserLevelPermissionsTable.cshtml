@if (userLevelPermissionsList.ModalGridAdd && userLevelPermissionsList.IsGridAdd || userLevelPermissionsList.ModalGridEdit && userLevelPermissionsList.IsGridEdit || userLevelPermissionsList.ModalMultiEdit && userLevelPermissionsList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(userLevelPermissionsList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { UserLevelPermissions: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(userLevelPermissionsList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(userLevelPermissionsList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(userLevelPermissionsList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(userLevelPermissionsList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<div class="card ew-card ew-grid@(userLevelPermissionsList.IsAddOrEdit ? " ew-grid-add-edit" : "") @(userLevelPermissionsList.TableGridClass)">
@if (!userLevelPermissionsList.IsExport()) {
<div class="card-header ew-grid-upper-panel">
@if (!userLevelPermissionsList.IsGridAdd && !(userLevelPermissionsList.IsGridEdit && userLevelPermissionsList.ModalGridEdit) && !userLevelPermissionsList.IsMultiEdit) {
@Html.Raw(userLevelPermissionsList.Pager.Render())
}
<div class="ew-list-other-options">
@userLevelPermissionsList.OtherOptions.RenderBody()
</div>
</div>
}
<form name="@(userLevelPermissionsList.FormName)" id="@(userLevelPermissionsList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(userLevelPermissionsList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (userLevelPermissionsList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div id="gmp_UserLevelPermissions" class="card-body ew-grid-middle-panel @(userLevelPermissionsList.TableContainerClass)" style="@(userLevelPermissionsList.TableContainerStyle)">
@if (userLevelPermissionsList.TotalRecords > 0 || userLevelPermissionsList.IsGridEdit || userLevelPermissionsList.IsMultiEdit) {
<table id="tbl_UserLevelPermissionslist" class="@(userLevelPermissionsList.TableClass)"><!-- .ew-table -->
<thead>
    <tr class="ew-table-header">
@{
    // Header row
    userLevelPermissionsList.RowType = RowType.Header;

    // Render list options
    await userLevelPermissionsList.RenderListOptions();
}
@* Render list options (header, left) *@
@userLevelPermissionsList.ListOptions.RenderHeader("left")
@if (userLevelPermissionsList.UserLevelID.Visible) { // userLevelPermissionsList.UserLevelID.Visible (begin)
        <th data-name="UserLevelID" class="@(userLevelPermissionsList.UserLevelID.HeaderCellClass)"><div id="elh_UserLevelPermissions_UserLevelID" class="UserLevelPermissions_UserLevelID">@Html.Raw(userLevelPermissionsList.RenderFieldHeader(userLevelPermissionsList.UserLevelID))</div></th>
} @* userLevelPermissionsList.UserLevelID.Visible (end) *@
@if (userLevelPermissionsList._TableName.Visible) { // userLevelPermissionsList._TableName.Visible (begin)
        <th data-name="_TableName" class="@(userLevelPermissionsList._TableName.HeaderCellClass)"><div id="elh_UserLevelPermissions__TableName" class="UserLevelPermissions__TableName">@Html.Raw(userLevelPermissionsList.RenderFieldHeader(userLevelPermissionsList._TableName))</div></th>
} @* userLevelPermissionsList._TableName.Visible (end) *@
@if (userLevelPermissionsList.Permission.Visible) { // userLevelPermissionsList.Permission.Visible (begin)
        <th data-name="Permission" class="@(userLevelPermissionsList.Permission.HeaderCellClass)"><div id="elh_UserLevelPermissions_Permission" class="UserLevelPermissions_Permission">@Html.Raw(userLevelPermissionsList.RenderFieldHeader(userLevelPermissionsList.Permission))</div></th>
} @* userLevelPermissionsList.Permission.Visible (end) *@
@* Render list options (header, right) *@
@userLevelPermissionsList.ListOptions.RenderHeader("right")
    </tr>
</thead>
<tbody data-page="@(userLevelPermissionsList.PageNumber)">
@{
    await userLevelPermissionsList.SetupGrid();
    bool eof = userLevelPermissionsList.Recordset == null; // DN
}
@while (userLevelPermissionsList.RecordCount < userLevelPermissionsList.StopRecord || SameString(userLevelPermissionsList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(userLevelPermissionsList.RowIndex, "$rowindex$") &&
        (!userLevelPermissionsList.IsGridAdd || userLevelPermissionsList.CurrentMode == "copy") &&
        (!((userLevelPermissionsList.IsCopy || userLevelPermissionsList.IsAdd) && userLevelPermissionsList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await userLevelPermissionsList.Recordset.ReadAsync();
    userLevelPermissionsList.RecordCount++;
    if (userLevelPermissionsList.RecordCount >= userLevelPermissionsList.StartRecord) {
        await userLevelPermissionsList.SetupRow();
    <tr @Html.Raw(userLevelPermissionsList.RowAttributes)>
    @* Render list options (body, left) *@
    @userLevelPermissionsList.ListOptions.RenderBody("left", userLevelPermissionsList.RowCount)
    @if (userLevelPermissionsList.UserLevelID.Visible) { // userLevelPermissionsList.UserLevelID.Visible (begin)
        <td data-name="UserLevelID" @Html.Raw(userLevelPermissionsList.UserLevelID.CellAttributes)>
<span id="el@(userLevelPermissionsList.RowIndex == "$rowindex$" ? "$rowindex$" : userLevelPermissionsList.RowCount)_UserLevelPermissions_UserLevelID" class="el_UserLevelPermissions_UserLevelID">
<span @Html.Raw(userLevelPermissionsList.UserLevelID.ViewAttributes)>
@Html.Raw(userLevelPermissionsList.UserLevelID.GetViewValue())</span>
</span>
</td>
    } @* userLevelPermissionsList.UserLevelID.Visible (end) *@
    @if (userLevelPermissionsList._TableName.Visible) { // userLevelPermissionsList._TableName.Visible (begin)
        <td data-name="_TableName" @Html.Raw(userLevelPermissionsList._TableName.CellAttributes)>
<span id="el@(userLevelPermissionsList.RowIndex == "$rowindex$" ? "$rowindex$" : userLevelPermissionsList.RowCount)_UserLevelPermissions__TableName" class="el_UserLevelPermissions__TableName">
<span @Html.Raw(userLevelPermissionsList._TableName.ViewAttributes)>
@Html.Raw(userLevelPermissionsList._TableName.GetViewValue())</span>
</span>
</td>
    } @* userLevelPermissionsList._TableName.Visible (end) *@
    @if (userLevelPermissionsList.Permission.Visible) { // userLevelPermissionsList.Permission.Visible (begin)
        <td data-name="Permission" @Html.Raw(userLevelPermissionsList.Permission.CellAttributes)>
<span id="el@(userLevelPermissionsList.RowIndex == "$rowindex$" ? "$rowindex$" : userLevelPermissionsList.RowCount)_UserLevelPermissions_Permission" class="el_UserLevelPermissions_Permission">
<span @Html.Raw(userLevelPermissionsList.Permission.ViewAttributes)>
@Html.Raw(userLevelPermissionsList.Permission.GetViewValue())</span>
</span>
</td>
    } @* userLevelPermissionsList.Permission.Visible (end) *@
    @* Render list options (body, right) *@
    @userLevelPermissionsList.ListOptions.RenderBody("right", userLevelPermissionsList.RowCount)
    </tr>
    } @* End if *@

    // Reset for template row
    if (SameString(userLevelPermissionsList.RowIndex, "$rowindex$"))
        userLevelPermissionsList.RowIndex = 0;

    // Reset inline add/copy row
    if ((userLevelPermissionsList.IsCopy || userLevelPermissionsList.IsAdd) && userLevelPermissionsList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        userLevelPermissionsList.RowIndex = 1;
} @* End While *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
</div><!-- /.ew-grid-middle-panel -->
@if (Empty(userLevelPermissionsList.CurrentAction) && !userLevelPermissionsList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ userLevelPermissionsList.CloseRecordset(); }
</div><!-- /.ew-grid -->
