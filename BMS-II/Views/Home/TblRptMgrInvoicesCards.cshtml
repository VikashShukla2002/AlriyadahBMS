@if (!tblRptMgrInvoicesList.IsExport()) {
<div>
@if (!tblRptMgrInvoicesList.IsGridAdd && !(tblRptMgrInvoicesList.IsGridEdit && tblRptMgrInvoicesList.ModalGridEdit) && !tblRptMgrInvoicesList.IsMultiEdit) {
@Html.Raw(tblRptMgrInvoicesList.Pager.Render())
}
<div class="ew-list-other-options">
@tblRptMgrInvoicesList.OtherOptions.RenderBody()
</div>
</div>
}
@if (tblRptMgrInvoicesList.ModalGridAdd && tblRptMgrInvoicesList.IsGridAdd || tblRptMgrInvoicesList.ModalGridEdit && tblRptMgrInvoicesList.IsGridEdit || tblRptMgrInvoicesList.ModalMultiEdit && tblRptMgrInvoicesList.IsMultiEdit) {
<script>
var currentTable = @Html.Raw(ConvertToJson(tblRptMgrInvoicesList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tblRptMgrInvoices: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(tblRptMgrInvoicesList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(tblRptMgrInvoicesList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(tblRptMgrInvoicesList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(tblRptMgrInvoicesList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.5.0", "preview");
</script>
}
<form name="@(tblRptMgrInvoicesList.FormName)" id="@(tblRptMgrInvoicesList.FormName)" class="ew-form ew-list-form ew-multi-column-form" action="@AppPath(tblRptMgrInvoicesList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (tblRptMgrInvoicesList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div class="@(tblRptMgrInvoicesList.GetMultiColumnRowClass())">
@if (tblRptMgrInvoicesList.TotalRecords > 0 || tblRptMgrInvoicesList.IsGridEdit || tblRptMgrInvoicesList.IsMultiEdit) {
    await tblRptMgrInvoicesList.SetupGrid();
    bool eof = tblRptMgrInvoicesList.Recordset == null; // DN
while (tblRptMgrInvoicesList.RecordCount < tblRptMgrInvoicesList.StopRecord || SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$") &&
        (!tblRptMgrInvoicesList.IsGridAdd || tblRptMgrInvoicesList.CurrentMode == "copy") &&
        (!((tblRptMgrInvoicesList.IsCopy || tblRptMgrInvoicesList.IsAdd) && tblRptMgrInvoicesList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await tblRptMgrInvoicesList.Recordset.ReadAsync();
    tblRptMgrInvoicesList.RecordCount++;
    if (tblRptMgrInvoicesList.RecordCount >= tblRptMgrInvoicesList.StartRecord) {
        await tblRptMgrInvoicesList.SetupRow();
<div class="@(tblRptMgrInvoicesList.GetMultiColumnColClass())" @Html.Raw(tblRptMgrInvoicesList.RowAttributes)>
<div class="@(tblRptMgrInvoicesList.MultiColumnCardClass)">
    @if (tblRptMgrInvoicesList.MultiColumnListOptionsPosition.StartsWith("top", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-header">
        <div class="ew-multi-column-list-option ew-@(tblRptMgrInvoicesList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    tblRptMgrInvoicesList.ListOptions.Tag = "div";
    tblRptMgrInvoicesList.ListOptions.RenderBody(tblRptMgrInvoicesList.MultiColumnListOptionsPosition, tblRptMgrInvoicesList.RowCount);
}
        </div><!-- /.ew-multi-column-list-option -->
    </div>
    }
    <div class="card-body">
    @if (tblRptMgrInvoicesList.NationalID.Visible) { // tblRptMgrInvoicesList.NationalID.Visible (begin)
        if (tblRptMgrInvoicesList.RowType == RowType.View) { // View record
        <div class="row tblRptMgrInvoices_NationalID">
            <div class="col col-sm-4 tblRptMgrInvoices_NationalID">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.NationalID))</div>
            <div class="col col-sm-8"><div @Html.Raw(tblRptMgrInvoicesList.NationalID.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.NationalID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.NationalID.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row tblRptMgrInvoices_NationalID">
            <label class="@(tblRptMgrInvoicesList.LeftColumnClass)">@Html.Raw(tblRptMgrInvoicesList.NationalID.Caption)</label>
            <div class="@(tblRptMgrInvoicesList.RightColumnClass)"><div @Html.Raw(tblRptMgrInvoicesList.NationalID.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.NationalID.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.NationalID.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (tblRptMgrInvoicesList.Report_Date.Visible) { // tblRptMgrInvoicesList.Report_Date.Visible (begin)
        if (tblRptMgrInvoicesList.RowType == RowType.View) { // View record
        <div class="row tblRptMgrInvoices_Report_Date">
            <div class="col col-sm-4 tblRptMgrInvoices_Report_Date">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.Report_Date))</div>
            <div class="col col-sm-8"><div @Html.Raw(tblRptMgrInvoicesList.Report_Date.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.Report_Date.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.Report_Date.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row tblRptMgrInvoices_Report_Date">
            <label class="@(tblRptMgrInvoicesList.LeftColumnClass)">@Html.Raw(tblRptMgrInvoicesList.Report_Date.Caption)</label>
            <div class="@(tblRptMgrInvoicesList.RightColumnClass)"><div @Html.Raw(tblRptMgrInvoicesList.Report_Date.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.Report_Date.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.Report_Date.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (tblRptMgrInvoicesList.str_Username.Visible) { // tblRptMgrInvoicesList.str_Username.Visible (begin)
        if (tblRptMgrInvoicesList.RowType == RowType.View) { // View record
        <div class="row tblRptMgrInvoices_str_Username">
            <div class="col col-sm-4 tblRptMgrInvoices_str_Username">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.str_Username))</div>
            <div class="col col-sm-8"><div @Html.Raw(tblRptMgrInvoicesList.str_Username.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.str_Username.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.str_Username.GetViewValue())</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row tblRptMgrInvoices_str_Username">
            <label class="@(tblRptMgrInvoicesList.LeftColumnClass)">@Html.Raw(tblRptMgrInvoicesList.str_Username.Caption)</label>
            <div class="@(tblRptMgrInvoicesList.RightColumnClass)"><div @Html.Raw(tblRptMgrInvoicesList.str_Username.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.str_Username.ViewAttributes)>
@Html.Raw(tblRptMgrInvoicesList.str_Username.GetViewValue())</span>
</div></div>
        </div>
        }
    }
    @if (tblRptMgrInvoicesList.Report_Link.Visible) { // tblRptMgrInvoicesList.Report_Link.Visible (begin)
        if (tblRptMgrInvoicesList.RowType == RowType.View) { // View record
        <div class="row tblRptMgrInvoices_Report_Link">
            <div class="col col-sm-4 tblRptMgrInvoices_Report_Link">@Html.Raw(tblRptMgrInvoicesList.RenderFieldHeader(tblRptMgrInvoicesList.Report_Link))</div>
            <div class="col col-sm-8"><div @Html.Raw(tblRptMgrInvoicesList.Report_Link.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.Report_Link.ViewAttributes)>
@if (!EmptyString(tblRptMgrInvoicesList.Report_Link.GetViewValue()) && !Empty(tblRptMgrInvoicesList.Report_Link.LinkAttributes)) {
<a @Html.Raw(tblRptMgrInvoicesList.Report_Link.LinkAttributes)>@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())</a>
} else {
@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())
}
</span>
</div></div>
        </div>
        } else { // Add/edit record
        <div class="row tblRptMgrInvoices_Report_Link">
            <label class="@(tblRptMgrInvoicesList.LeftColumnClass)">@Html.Raw(tblRptMgrInvoicesList.Report_Link.Caption)</label>
            <div class="@(tblRptMgrInvoicesList.RightColumnClass)"><div @Html.Raw(tblRptMgrInvoicesList.Report_Link.CellAttributes)>
<span @Html.Raw(tblRptMgrInvoicesList.Report_Link.ViewAttributes)>
@if (!EmptyString(tblRptMgrInvoicesList.Report_Link.GetViewValue()) && !Empty(tblRptMgrInvoicesList.Report_Link.LinkAttributes)) {
<a @Html.Raw(tblRptMgrInvoicesList.Report_Link.LinkAttributes)>@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())</a>
} else {
@Html.Raw(tblRptMgrInvoicesList.Report_Link.GetViewValue())
}
</span>
</div></div>
        </div>
        }
    }
    </div><!-- /.card-body -->
@if (!tblRptMgrInvoicesList.IsExport()) {
    if (tblRptMgrInvoicesList.MultiColumnListOptionsPosition.StartsWith("bottom", StringComparison.InvariantCultureIgnoreCase)) {
    <div class="card-footer">
        <div class="ew-multi-column-list-option ew-@(tblRptMgrInvoicesList.MultiColumnListOptionsPosition)">
@{
    // Render list options (body, bottom)
    tblRptMgrInvoicesList.ListOptions.Tag = "div";
}
@tblRptMgrInvoicesList.ListOptions.RenderBody(tblRptMgrInvoicesList.MultiColumnListOptionsPosition, tblRptMgrInvoicesList.RowCount)
        </div><!-- /.ew-multi-column-list-option -->
    </div><!-- /.card-footer -->
    }
}
</div><!-- /.card -->
</div><!-- /.col-* -->
    } @* End if *@

    // Reset for template row
    if (SameString(tblRptMgrInvoicesList.RowIndex, "$rowindex$"))
        tblRptMgrInvoicesList.RowIndex = 0;

    // Reset inline add/copy row
    if ((tblRptMgrInvoicesList.IsCopy || tblRptMgrInvoicesList.IsAdd) && tblRptMgrInvoicesList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        tblRptMgrInvoicesList.RowIndex = 1;
} @* End While *@
} @* tblRptMgrInvoicesList.TotalRecords > 0 (end) *@
</div><!-- /.ew-multi-column-row -->
@if (Empty(tblRptMgrInvoicesList.CurrentAction) && !tblRptMgrInvoicesList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ tblRptMgrInvoicesList.CloseRecordset(); }
